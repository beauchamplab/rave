% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visual_signal.R
\name{diagnose_signal}
\alias{diagnose_signal}
\title{Signal Inspection Plots}
\usage{
diagnose_signal(s1, s2 = NULL, sc = NULL, srate, name = "",
  try_compress = TRUE, max_freq = 300, window = ceiling(srate * 2),
  noverlap = window/2, std = 3, cex = 1.5, lwd = 0.5,
  flim = NULL, nclass = 100, main = "Channel Inspection",
  col = c("black", "red"), which = NULL, start_time = 0,
  boundary = NULL, mar = c(5.2, 5.1, 4.1, 2.1), ...)
}
\arguments{
\item{s1}{Signal for inspection}

\item{s2}{Signal to compare, default NULL}

\item{sc}{compressed signal to speedup , if not provided, then either s1 is used,
or s1 will be compressed to 100Hz, see also \code{try_compress}}

\item{srate}{Sample rate of s1, I assume that s2 and s1 have the same sample rate}

\item{name}{Analysis name, for e.g. 'CAR', 'Notch', etc.}

\item{try_compress}{If length(s1) is big, R might take long to run, a solution is to
down-sample s1 first (like what matlab does), and then plot compressed
signal. However, some information will be lost during this process.
\code{try_compress=FALSE} indicates that you want raw signal (s1) rather than
compressed signal}

\item{max_freq}{Max frequency to be ploted, should be smaller than srate/2}

\item{window}{Window length to draw periodogram}

\item{noverlap}{Number of data points that each adjacent windows overlap?}

\item{std}{Error bar (red line) be draw at std * sd(s1), by default is 3, which
means 3 standard deviation}

\item{cex, lwd, mar, ...}{passed to \code{\link[graphics]{plot.default}}}

\item{flim}{log10-Frequency range to plot (left bottom plot y range)}

\item{nclass}{Number of classes for histogram}

\item{main}{Plot title}

\item{col}{Two elements: the first is for s1, second is for s2.}

\item{which}{Which subplot to plot}

\item{start_time}{When does signal starts}

\item{boundary}{Boundary for signal plot, default is 1 standard dev}
}
\description{
Signal Inspection Plots
}
\examples{
\dontrun{
time <- seq(0, 300, 1/2000)
s2 <- sin(pi/30 * time + rcauchy(length(time)) / 1000) + rnorm(length(time))
diagnose_signal(s2, srate = 2000, flim = c(-4,-1))

# Apply notch filter
s1 = notch_filter(s2, 2000, 58,62)
diagnose_signal(s1, s2, srate = 2000, flim = c(-4,-1))
}

}
