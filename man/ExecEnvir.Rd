% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-ExecEnvir.R
\name{ExecEnvir}
\alias{ExecEnvir}
\title{Module runtime environment (session based)}
\description{
Module runtime environment (session based)

Module runtime environment (session based)
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-reload}{\code{ExecEnvir$reload()}}
\item \href{#method-finalize}{\code{ExecEnvir$finalize()}}
\item \href{#method-info}{\code{ExecEnvir$info()}}
\item \href{#method-print}{\code{ExecEnvir$print()}}
\item \href{#method-clean}{\code{ExecEnvir$clean()}}
\item \href{#method-new}{\code{ExecEnvir$new()}}
\item \href{#method-reset}{\code{ExecEnvir$reset()}}
\item \href{#method-copy}{\code{ExecEnvir$copy()}}
\item \href{#method-execute_with}{\code{ExecEnvir$execute_with()}}
\item \href{#method-names}{\code{ExecEnvir$names()}}
\item \href{#method-register_module}{\code{ExecEnvir$register_module()}}
\item \href{#method-rave_inputs}{\code{ExecEnvir$rave_inputs()}}
\item \href{#method-rave_outputs}{\code{ExecEnvir$rave_outputs()}}
\item \href{#method-rave_updates}{\code{ExecEnvir$rave_updates()}}
\item \href{#method-rave_execute}{\code{ExecEnvir$rave_execute()}}
\item \href{#method-clear_cache}{\code{ExecEnvir$clear_cache()}}
\item \href{#method-cache}{\code{ExecEnvir$cache()}}
\item \href{#method-cache_input}{\code{ExecEnvir$cache_input()}}
\item \href{#method-set_browser}{\code{ExecEnvir$set_browser()}}
\item \href{#method-generate_input_ui}{\code{ExecEnvir$generate_input_ui()}}
\item \href{#method-generate_output_ui}{\code{ExecEnvir$generate_output_ui()}}
\item \href{#method-is_global}{\code{ExecEnvir$is_global()}}
\item \href{#method-clone}{\code{ExecEnvir$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-reload"></a>}}
\subsection{Method \code{reload()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$reload()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-finalize"></a>}}
\subsection{Method \code{finalize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$finalize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-info"></a>}}
\subsection{Method \code{info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$info()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clean"></a>}}
\subsection{Method \code{clean()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$clean()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$new(session = getDefaultReactiveDomain(), parent_env = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-reset"></a>}}
\subsection{Method \code{reset()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$reset(inputs)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-copy"></a>}}
\subsection{Method \code{copy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$copy(
  session_id = "__fake_runtime_env__",
  data_env = getDefaultDataRepository()
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-execute_with"></a>}}
\subsection{Method \code{execute_with()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$execute_with(param, async = FALSE, plan = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-names"></a>}}
\subsection{Method \code{names()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$names(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-register_module"></a>}}
\subsection{Method \code{register_module()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$register_module(module_env)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rave_inputs"></a>}}
\subsection{Method \code{rave_inputs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$rave_inputs(
  ...,
  .input_panels = list(),
  .tabsets = list(),
  .env = NULL,
  .manual_inputs = NULL,
  .render_inputs = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rave_outputs"></a>}}
\subsection{Method \code{rave_outputs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$rave_outputs(
  ...,
  .output_tabsets = list(),
  .tabsets = list(),
  .env = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rave_updates"></a>}}
\subsection{Method \code{rave_updates()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$rave_updates(..., .env = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rave_execute"></a>}}
\subsection{Method \code{rave_execute()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$rave_execute(..., auto = TRUE, .env = NULL, async_vars = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clear_cache"></a>}}
\subsection{Method \code{clear_cache()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$clear_cache(levels = 1)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache"></a>}}
\subsection{Method \code{cache()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$cache(
  key,
  val,
  name,
  replace = FALSE,
  persist = FALSE,
  across_instance = FALSE,
  across_module = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cache_input"></a>}}
\subsection{Method \code{cache_input()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$cache_input(
  inputId,
  val = NULL,
  read_only = TRUE,
  sig = NULL,
  module_id,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_browser"></a>}}
\subsection{Method \code{set_browser()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$set_browser(expr)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-generate_input_ui"></a>}}
\subsection{Method \code{generate_input_ui()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$generate_input_ui(sidebar_width = 3L)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-generate_output_ui"></a>}}
\subsection{Method \code{generate_output_ui()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$generate_output_ui(sidebar_width = 3L)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_global"></a>}}
\subsection{Method \code{is_global()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$is_global(inputId)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExecEnvir$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
