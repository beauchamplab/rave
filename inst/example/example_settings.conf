########################################
# Global Settings for RAVE
# 1. Use `#` to comment
# 2. This is default settings (DO NOT CHANGE), if you want to add/override settings,
#    you can append customized settings file and add relative path to
#    additional_settings
# 3. To assign variables, use `:=`. Your variable names should only contain "a-z", "_"
# 4. No `"` or `'` is needed, all options will be stored as characters with no exception.
#    Force convert values before use.


######################################## System settings

# Time zone, reserved option
#
server_time_zone := America/Chicago


# Where to store exported modules
#
module_export := ./export


# Type ?async or ?use_multicores for details. The max number of multi-taskes allowed.
#
max_worker := 20


######################################## Data settings

# Data directory, by default raw ecog data files should be in:
# [data_dir]/[subject_dir]/ecog/
# data_dir should be absolute path (suggested)
data_dir := system.file('example/data', package = 'rafe')


# Electrode file name pattern,
# Let's say "e12.mat" is the file name for electrode 12, the following code
# should be able to extract "12" in the second position
#               require(stringr); str_match('e12.mat', 'e([0-9]+)[^0-9]*');
# The regular expression 'e([0-9]+)[^0-9]*', which is used to extract "12"
# can be `content_regex` while the postfix, "mat", should be assign to `content_format`
# 
# These options is reserved for future use to support other file formats
#
content_regex := e([0-9]+)[^0-9]*
content_format := mat


######################################## Script Settings

# The path to your module look-up file
# By defalt, it's system.file('modules.csv', package = 'rafe'),
# you can specify module look-up file by your own
#
# To see my example,
#               cat(readLines(system.file('modules.csv', package = 'rafe')), sep = '\n')
#
module_lookup_file := system.file('example/module/modules.csv', package = 'rafe')

######################################## Shiny Settings

# by default, RAVE will update output 200ms after changes on inputs, if there's no other 
# input changed within 200ms
# 
# For example, you change one input, the system will wait for 200ms to see if there's any other
# changes on inputs. If no, fire update command. If you changed another input during this 200ms, 
# then wait for another 200ms...
# This value prevents the UI to be updated too frequently
# 
delay_input := 200


