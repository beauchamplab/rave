[{"path":"https://beauchamplab.github.io/rave/Installation.html","id":null,"dir":"","previous_headings":"","what":"Prerequisite Installation Guide for RAVE for Mac, Windows and Linux","title":"Prerequisite Installation Guide for RAVE for Mac, Windows and Linux","text":"Click operating system. Mac OS Windows (Windows 10, Bash enabled) Ubuntu 16.04+","code":""},{"path":"https://beauchamplab.github.io/rave/Installation.html","id":"macos","dir":"","previous_headings":"","what":"MacOS","title":"Prerequisite Installation Guide for RAVE for Mac, Windows and Linux","text":"First, go Cran-R official website download install latest version R: https://cran.r-project.org/bin/macosx/ installing R, make sure install Xcode Mac App Store: ( helpful article case errors) Open Terminal (Applications folder), enter Click yes proceed installing command-line tools. first use, br required read accept Apple license. Don’t worry following error occurs. just means already installed xcode command line tools. Install free version RStudio Desktop : https://www.rstudio.com/products/rstudio/download/","code":"xcode-select --install // xcode-select: error: command line tools are already installed, use \"Software Update\" to install updates"},{"path":"https://beauchamplab.github.io/rave/Installation.html","id":"windows","dir":"","previous_headings":"","what":"Windows","title":"Prerequisite Installation Guide for RAVE for Mac, Windows and Linux","text":"asked many questions installers; default response fine . 1. Install latest version R https://cran.r-project.org/bin/windows/base/ Install latest version RTools. version RTools must match version R. https://cran.r-project.org/bin/windows/Rtools/ Download install free version RStudio Desktop Windows. https://www.rstudio.com/products/rstudio/download/","code":""},{"path":"https://beauchamplab.github.io/rave/Installation.html","id":"ubuntu","dir":"","previous_headings":"","what":"Ubuntu","title":"Prerequisite Installation Guide for RAVE for Mac, Windows and Linux","text":"Add R-Cran repository app list: Open terminal (don’t know , look sidebar ubuntu, search computer enter “terminal”, open ), type following code: text editor lots “deb”s . Append following line end file IMPORTANT Based system, might want enter different repositories (https://cran.r-project.org/bin/linux/). However, line format deb + [repository URL] + xenial (xenial-cran35) + /. difference xenial xenial-cran35 affect version R installed. Save file close text editor. terminal, update apt-get repository: first line gives access new repository (adds keys computer can safely download R). Install R Copy following command line line terminal run Install compiling tools system dependencies installing R, copy following command terminal run: first three packages libssl-dev libcurl4-openssl-dev libssh2-1-dev necessary devtools (compilers). libv8-3.14-dev V8 package enable JavaScript. libxml2-dev xml2. libfftw3-dev libtiff5-dev necessary fast-fourier transformations libhdf5-dev reading writing data open data format HDF5. Install free version RStudio Desktop : Go https://www.rstudio.com/products/rstudio/download/#download download one keywords “Ubuntu 16.04+/Debian 9+ (64-bit)”, move downloaded file desktop, rename “rstudio.deb”. Open terminal, type folloing command terminal can install RStudio. RStudio application list. , don’t know , look sidebar ubuntu, click search computer enter “RStudio”. linux systems might need check recommended system packages","code":"sudo gedit /etc/apt/sources.list deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 sudo apt-get update sudo apt-get install r-base sudo apt-get install r-base-dev sudo apt-get install libssl-dev libcurl4-openssl-dev libssh2-1-dev libv8-3.14-dev libxml2-dev libfftw3-dev libtiff5-dev libhdf5-dev cd ~/Desktop sudo apt-get install libjpeg62 sudo dpkg -i ./rstudio.deb"},{"path":"https://beauchamplab.github.io/rave/Requirements.html","id":"system-requirements-for-rave","dir":"","previous_headings":"","what":"System Requirements for RAVE","title":"NA","text":"Minimum system requirements: Multicore CPU 16GB RAM 128 GB Free Hard Disk Space 512 MB Shared Video Memory WebGL-enabled Web Browser (Chrome) Suggested system requirements: least 4 Core CPU (e.g. core i5) 64GB RAM (recommend 8 GB per core) 1T Hard Disk Space 1 GB Video Memory WebGL-enabled Web Browser (Chrome)","code":""},{"path":"https://beauchamplab.github.io/rave/Updates.html","id":null,"dir":"","previous_headings":"","what":"Dev Checks","title":"Dev Checks","text":"Starting 03/11/2019 Created : Zhengjia Wang","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/alternative_installation.html","id":null,"dir":"","previous_headings":"","what":"Full RAVE installation guide","title":"Full RAVE installation guide","text":"best performance, recommend 4-core CPU (e.g. Intel i5 better) least 64GB RAM (least 8 GB per core). RAVE displays results web browser, deceloped Google Chrome. Apple Microsoft browsers run reduced functionality (e.g. shaders render brain slices). Mac UNIX offers better multicore tools Windows, multithreaded operation better platforms. First, install required prerequisites. RAVE requires latest versions R (>= 3.6.0) RStudio. Trying install RAVE older versions R RStudio lead unpredictable error messages. cloud-based RAVE use cases multiple users run RAVE single server, consider RStudio Server instead RStudio. Next, open RStudio application using desktop shortcut; Mac OSX, RStudio can found Applications folder. Copy paste following commands (one time) RStudio console install current version RAVE. Answer “Yes” questions appear. case errors, relaunch RStudio repeat commands. update existing installations RAVE, run following commands making sure update R RStudio. Start RAVE verify newer version loads. RStudio unable update packages use, may necessary restart RStudio retry update. additional step, use RStudio package manager delete RAVE packages reinstall. installing updating RAVE, quit restart RStudio continuing.","code":"# this step requires XCode on mac or RTools on Windows install.packages('devtools') devtools::install_github('beauchamplab/rave')  # this step will install other packages needed by RAVE. If asked to compile packages from source,  # you can say safely say no.  rave::check_dependencies() # this step may fail on Windows. If so, run  remotes::install_github(\"dipterix/dipsaus\", upgrade = FALSE, force = FALSE, quiet = FALSE)  # this step ensures all available RAVE modules are accessible rave::arrange_modules(TRUE, TRUE)  # This step ensures you have a template brain already installed. threeBrain::download_N27(make_default = TRUE) devtools::install_github('beauchamplab/rave') rave::check_dependencies()"},{"path":"https://beauchamplab.github.io/rave/alternative_installation.html","id":"download-demo-data","dir":"","previous_headings":"","what":"Download Demo data","title":"Full RAVE installation guide","text":"data RAVE format, recommend download sample data. RStudio command downloads dataset single subject. see following message, subject downloaded. directory (XXX) vary depending machine. subject previously exists, RAVE ask choose replacing, creating new abandon downloaded subject.","code":"# 500MB ~ 1.5 GB per subject rave::download_sample_data('KC') rave::download_sample_data('YAB') rave::download_sample_data('YAD') rave::download_sample_data('YAF') rave::download_sample_data('YAH') rave::download_sample_data('YAI') rave::download_sample_data('YAJ') rave::download_sample_data('YAK')  # download group analysis sample - 72 MB. Please download at least 1 subject above. rave::download_sample_data('_group_data') [ INFO ]: Expanding zip file [ INFO ]: Copy from tempdir to data repository [ INFO ]: Clean up [ INFO ]: Done. Subject [sub1] is now at  [Raw Data]: /XXX/rave_data/raw_dir/KC [RAVE Data]: /XXX/rave_data/data_dir/demo/KC"},{"path":"https://beauchamplab.github.io/rave/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Copyright holder, author, maintainer. John Magnotti. Author. Michael S. Beauchamp. Author, funder. Beauchamp lab. Copyright holder, funder.","code":""},{"path":"https://beauchamplab.github.io/rave/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Magnotti, JF, Wang, Z, Beauchamp, MS. RAVE: comprehensive open-source software reproducible analysis visualization intracranial EEG data. Metzger BA, Magnotti JF, Wang Z, Nesbitt E, Karas PJ, Yoshor D, Beauchamp MS. Responses Visual Speech Human Posterior Superior Temporal Gyrus Examined iEEG Deconvolution. Journal Neuroscience Karas PJ, Magnotti JF, Metzger BA, Zhu LL, Smith KB, Yoshor D, Beauchamp MS. visual speech head start improves perception reduces superior temporal cortex responses auditory speech. eLife 2019;8:e48116","code":"@Article{,   title = {{RAVE}: Comprehensive open-source software for reproducible analysis and visualization of intracranial EEG data},   author = {John F. Magnotti and Zhengjia Wang and Michael S. Beauchamp},   journal = {bioRxiv},   year = {2020},   doi = {10.1016/j.neuroimage.2020.117341}, } @Article{,   title = {Responses to visual speech in human Posterior Superior Temporal Gyrus examined with iEEG deconvolution},   author = {Brian A. Metzger and John F. Magnotti and Zhengjia Wang and Elizabeth Nesbitt and Patrick J. Karas and Daniel Yoshor and Michael S. Beauchamp},   journal = {Journal of Neuroscience},   year = {2020},   doi = {10.1523/JNEUROSCI.0279-20.2020}, } @Article{,   title = {The visual speech head start improves perception and reduces superior temporal cortex responses to auditory speech},   author = {Patrick J. Karas and John F. Magnotti and Brian A. Metzger and Lin L. Zhu and Kristen B. Smith and Daniel Yoshor and Michael S. Beauchamp},   journal = {eLife},   year = {2019},   doi = {10.7554/eLife.48116}, }"},{"path":"https://beauchamplab.github.io/rave/index.html","id":"rave-r-analysis-and-visualization-of-intracranial-electroencephalography","dir":"","previous_headings":"","what":"R Analysis and Visualization of ECOG/iEEG Data","title":"R Analysis and Visualization of ECOG/iEEG Data","text":"RAVE info, including installation instructions, visit https://rave.wiki","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class for iEEG/ECoG data Repository — ECoGRepository","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"repository keep subject information, including electrode instances, reference information, epoch data, offers method epoch  data.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"Zhengjia Wang","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"subject Subject instance raw dictionary store Electrode instances reference dictionary store references electrodes epochs dictionary store epoch data raw_volt environment, stores pre-referenced analog traces raw_power environment, stores pre-referenced power spectrum raw_phase environment, stores pre-referenced phase data volt environment, stores referenced analog traces power environment, stores referenced power spectrum phase environment, stores referenced phase data","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"ECoGRepository$info() ECoGRepository$print() ECoGRepository$new() ECoGRepository$get_electrode() ECoGRepository$load_electrodes() ECoGRepository$epoch() ECoGRepository$load_reference() ECoGRepository$baseline()","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"obtain information","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$info(print = TRUE)"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"print logical, whether print information, default true","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"character information","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"print memory address","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$print(...)"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$new(subject, reference = \"default\", autoload = TRUE)"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"subject character \"project/subject\"  Subject instance reference character, reference name, default \"default\",  refers \"reference_default.csv\" subject meta folder autoload logical, whether auto-load reference  electrodes, default yes.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"ECoGRepository instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-get-electrode-","dir":"Reference","previous_headings":"","what":"Method get_electrode()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"get Electrode instances","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$get_electrode(electrode, name = \"raw\")"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"electrode integers, referring electrode numbers name character, \"raw\", \"power\", \"raw_phase\",  etc.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"list environments containing electrode instances","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-load-electrodes-","dir":"Reference","previous_headings":"","what":"Method load_electrodes()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"load electrodes; usually need directly call  method autoload true initializing repository","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$load_electrodes(electrodes, reference = \"default\")"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"electrodes electrode number (integer) reference name reference","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-epoch-","dir":"Reference","previous_headings":"","what":"Method epoch()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"slice data according epoch table","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$epoch(   epoch_name,   pre,   post,   electrodes = NULL,   frequency_range = NULL,   data_type = \"power\",   referenced = TRUE,   func = NULL,   quiet = FALSE )"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"epoch_name name epoch; example, \"YABa\" refers \"epoch_YABa.csv\" subject meta folder. pre positive number seconds, long time  kept onset post positive number seconds, long time  kept onset electrodes integers, electrode numbers frequency_range experimental, frequency range include data_type data types epoch; default \"power\",  power spectrum, amplitude. choices \"phase\"  phase data \"volt\" voltage analog signal traces. referenced whether load data referenced without reference func experimental, function apply electrodes quiet whether suppress output messages, default ","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"none. However results stored public fields.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-load-reference-","dir":"Reference","previous_headings":"","what":"Method load_reference()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"load references","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$load_reference(ref_name, electrodes = NULL)"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"ref_name reference name electrodes electrode numbers","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"method-baseline-","dir":"Reference","previous_headings":"","what":"Method baseline()","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"baseline signals (deprecated)","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"ECoGRepository$baseline(from, to, electrodes = NULL, print.time = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":", , electrodes, print.time internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"data baseline. Please use baseline  instead","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ECoGRepository.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class for iEEG/ECoG data Repository — ECoGRepository","text":"","code":"if (FALSE) {  # Two ways to create instances repo <- ECoGRepository$new('demo/YAB')  subject <- Subject$new(project_name = 'demo', subject_code = 'YAB') repo <- ECoGRepository$new(subject)  # Create an instance without auto collecting references, only load  # interesting electrodes repo <- ECoGRepository$new('demo/YAB', autoload = FALSE) repo$load_electrodes(c(14,15))  # Create an instance with non-default reference repo <- ECoGRepository$new('demo/YAB', reference = 'bipolar')  # Epoch data according to epoch file \"epoch_YABaOutlier.csv\" in meta folder # epoch_name should be \"epoch_(name).csv\" repo$epoch(epoch_name = 'YABaOutlier', pre = 1, post = 2,             electrodes = 14, referenced = TRUE, data_type = \"power\") repo$power #> Dimension:  287 x 16 x 301 x 1  #> - Trial: 1, 2, 3, 4, 5, 6,... #> - Frequency: 2, 12, 22, 32, 42... #> - Time: -1, -0.99, -0.98,... #> - Electrode: 14  }"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Electrode — Electrode","title":"R6 Class for Electrode — Electrode","text":"Stores single electrode reference signals","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R6 Class for Electrode — Electrode","text":"Zhengjia Wang","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class for Electrode — Electrode","text":"electrode electrode number integer raw_power stores pre-epoch power spectrum reference raw_phase stores pre-epoch phase reference raw_volt stores pre-epoch analog traces reference phase stores pre-epoch phase reference power stores pre-epoch power spectrum reference volt stores pre-epoch analog traces reference preload three data pre-loaded reference character Electrode instance indicating  reference current electrode has_power, has_phase, has_volt whether power, phase, voltage data exist file system reference","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"R6 Class for Electrode — Electrode","text":"has_power, has_phase, has_volt whether power, phase, voltage data exist file system reference blocks character vector block names (read-) subject_id character subject ID (read-) reference_electrode whether reference (read-)","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Electrode — Electrode","text":"Electrode$info() Electrode$print() Electrode$switch_reference() Electrode$referenced() Electrode$clean() Electrode$new() Electrode$epoch()","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"R6 Class for Electrode — Electrode","text":"print electrode information","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Electrode — Electrode","text":"","code":"Electrode$info()"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Electrode — Electrode","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 Class for Electrode — Electrode","text":"overrides default print method","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Electrode — Electrode","text":"","code":"Electrode$print(...)"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Electrode — Electrode","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Electrode — Electrode","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"method-switch-reference-","dir":"Reference","previous_headings":"","what":"Method switch_reference()","title":"R6 Class for Electrode — Electrode","text":"switch reference (experimental)","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Electrode — Electrode","text":"","code":"Electrode$switch_reference(new_reference)"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Electrode — Electrode","text":"new_reference electrode instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Electrode — Electrode","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"method-referenced-","dir":"Reference","previous_headings":"","what":"Method referenced()","title":"R6 Class for Electrode — Electrode","text":"get referenced data","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Electrode — Electrode","text":"","code":"Electrode$referenced(type = \"power\", ram = TRUE)"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Electrode — Electrode","text":"type data reference, default power ram whether load data memory","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Electrode — Electrode","text":"ram true, returns list matrices.  length list equals number blocks, matrix  frequency time points. ram false, returns  environment element LazyH5  LazyFST instance.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"method-clean-","dir":"Reference","previous_headings":"","what":"Method clean()","title":"R6 Class for Electrode — Electrode","text":"remove data memory","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Electrode — Electrode","text":"","code":"Electrode$clean(types = c(\"power\", \"phase\", \"volt\"), force = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Electrode — Electrode","text":"types data types clean force whether remove pre-loaded data types","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Electrode — Electrode","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Electrode — Electrode","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Electrode — Electrode","text":"","code":"Electrode$new(   subject,   electrode,   reference_by = \"noref\",   preload = NULL,   is_reference = FALSE )"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Electrode — Electrode","text":"subject Subject instance characters like  \"proj/sub\" electrode number, integer reference_by reference signals, choices character,  Electrode instance; default \"noref\",  meaning reference electrode preload data load along constructor is_reference current instance reference?","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Electrode — Electrode","text":"Electrode instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"method-epoch-","dir":"Reference","previous_headings":"","what":"Method epoch()","title":"R6 Class for Electrode — Electrode","text":"epoch electrode","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Electrode — Electrode","text":"","code":"Electrode$epoch(   epoch_name,   pre,   post,   types = c(\"volt\", \"power\", \"phase\"),   raw = FALSE,   hybrid = TRUE )"},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Electrode — Electrode","text":"epoch_name epoch name, example, epoch_name=\"default\" refers epoch file \"epoch_default.csv\" subject meta folder pre seconds trial onset load post seconds trial onset load types characters, data types load; choices \"volt\", \"power\", \"phase\" raw whether epoch pre-referenced data? hybrid whether fast-cache data hard-drive? See also  Tensor","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for Electrode — Electrode","text":"list data epoch","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Electrode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Electrode — Electrode","text":"","code":"if (FALSE) { # Electrode with no reference e1 <- Electrode$new('demo/YAB', electrode = 14, reference_by = 'noref') e1$reference #> Subject: demo/YAB #> Electrode: noref (Reference)  # Add Common Average Reference in rave/data/reference/ref_13-63,65-84.h5 e2 <- Electrode$new('demo/YAB', electrode = 14,                      reference_by = 'ref_13-63,65-84')  # Electrode with bipolar reference by another electrode e3 <- Electrode$new('demo/YAB', electrode = 14, reference_by = 'ref_15')  # Alternative way reference <- Electrode$new('demo/YAB', electrode = 15, is_reference = TRUE) e4 <- Electrode$new('demo/YAB', electrode = 14, reference_by = reference)  # e3, e4 are the same in scientific meaning. To test it, epoch them power3 <- e3$epoch('YABaOutlier', 1, 2, 'power',                     raw = FALSE, hybrid = FALSE)$power power4 <- e4$epoch('YABaOutlier', 1, 2, 'power',                    raw = FALSE, hybrid = TRUE)$power  # Compare e3 and e4, result difference should be 0 range(power3$get_data() - power4$get_data()) #> 0  # With or without hybrid, the size will be different # No hybrid, totally in memory lobstr::obj_size(power3) #> 12 MB # Hybrid, data is swapped to hard-drive lobstr::obj_size(power4) #> 908 kB }"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":null,"dir":"Reference","previous_headings":"","what":"Session-based Module Runtime Environment Class — ExecEnvir","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"module functions executed. rarely created manually, use get_module create module, run  start_app(m, test.mode=TRUE), inspect modules.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"Zhengjia Wang","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":".__rave_context__. context string current instance, indicating whether module running locally (public, internally used) .__rave_package__. current package name run (public,  internally used) .__rave_module__. module ID (public, internally used) .__rave_module_instance__. self instance (public, internally used) module_env ModuleEnvir instance cache_env cache environment store key-value pairs locally parent_env parent/top environment module, usually  global environment name-space module implemented  R package wrapper_env stores utility functions. functions  overridden observe,  rave_checks, eval_when_ready. functions behave  differently inside outside shiny context, without data  loaded. environment locked module initialized.  parent environment parent_env static_env stores module static functions. functions  evaluated parse_env moved . environment locked initialization. parent environment  wrapper_env param_env stores parameters user inputs. can  also serve repository global variables. Unlike previous environments, param_env unlocked, module creators  access environment directly. parent environment  static_env runtime_env main part module running. shiny observe observeEvent  redirected environment default (unless using  shiny::observe). functions static_env access  environment. parent environment param_env async_env asynchronous codes run parse_env environment modules parsed. parent  environment runtime_env. functions evaluated,  environment used. However, module creators directly  access environment module initialized. ns shiny name-space functions, equivalent  shiny::NS(module_id). goal add prefixes module inputs two modules input ID named differently auto_execute (Deprecated) whether auto-calculate results manual_inputIds character vector; name list manually input IDs. Used algorithm takes long run rendering_inputIds character vector; name list input IDs  one corresponding inputs changed, rave_execute get evaluated. outputs changed. input_update expressions update inputs register_output_events expressions register outputs register_input_events expressions register inputs execute module main function. function dynamically  generated. call directly. async_module (experimental) whether module contains  asynchronous part global_reactives shiny global reactives, internal use local_reactives shiny local reactives, internal use internal_reactives internal reactive values control  elements, internal use ready_functions functions run module ready.  functions called last step shinirize.  Usually used along eval_when_ready, make sure   global_reactives local_reactives getting registered functions calls","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"input_ids vector input IDs (read-) input_labels vector input labels (read-) output_labels vector output labels (read-) output_ids vector output IDs (read-)","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"ExecEnvir$reload() ExecEnvir$finalize() ExecEnvir$info() ExecEnvir$print() ExecEnvir$clean() ExecEnvir$new() ExecEnvir$reset() ExecEnvir$copy() ExecEnvir$execute_with() ExecEnvir$names() ExecEnvir$register_module() ExecEnvir$register_context() ExecEnvir$rave_inputs() ExecEnvir$rave_outputs() ExecEnvir$rave_updates() ExecEnvir$rave_execute() ExecEnvir$set_browser() ExecEnvir$generate_input_ui() ExecEnvir$generate_output_ui() ExecEnvir$is_global() ExecEnvir$clone()","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-reload-","dir":"Reference","previous_headings":"","what":"Method reload()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"(experimental) signal modules reload","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$reload()"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"garbage collection","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$finalize()"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"print variables different layers (environment)","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$info()"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"print memory address","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$print(...)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"memory address","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-clean-","dir":"Reference","previous_headings":"","what":"Method clean()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"clean environments release resource","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$clean()"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$new(session = getDefaultReactiveDomain(), parent_env = NULL)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"session shiny session instance parent_env parent environment instance: package name space global environment","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-reset-","dir":"Reference","previous_headings":"","what":"Method reset()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"reset runtime environment, rarely used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$reset(inputs)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"inputs reactive value list","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-copy-","dir":"Reference","previous_headings":"","what":"Method copy()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"(deprecated) copy instance locally","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$copy(   session_id = \"__fake_runtime_env__\",   data_env = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"session_id character data_env data stored, default environment  returned getDefaultDataRepository","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"copied instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-execute-with-","dir":"Reference","previous_headings":"","what":"Method execute_with()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"(deprecated) execute module given parameter","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$execute_with(param, async = FALSE, plan = NULL)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"param named list async whether run whole module plan future plan","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"runtime environment","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"returns names list, names null,  returns blank characters","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$names(x)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"x list","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"names list","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-register-module-","dir":"Reference","previous_headings":"","what":"Method register_module()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"register ModuleEnvir instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$register_module(module_env)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"module_env ModuleEnvir instance. modules shared across different sessions, run module, need  create runtime environment, ExecEnvir","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-register-context-","dir":"Reference","previous_headings":"","what":"Method register_context()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"Register 'RAVE' context current environment  (internally used)","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$register_context(context = c(\"rave_running\", \"rave_running_local\"))"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"context context string indicate whether module running  locally","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"None","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-rave-inputs-","dir":"Reference","previous_headings":"","what":"Method rave_inputs()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"parse input components","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$rave_inputs(   ...,   .input_panels = list(),   .tabsets = list(),   .env = NULL,   .manual_inputs = NULL,   .render_inputs = NULL )"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"... shiny input calls, textInput('id', 'Name', ...) .input_panels, .tabsets together define input layouts .env ignored, debug .manual_inputs input IDs cause module re-calculate inputs updated .render_inputs input IDs trigger render functions updated","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-rave-outputs-","dir":"Reference","previous_headings":"","what":"Method rave_outputs()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"parse output components","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$rave_outputs(   ...,   .output_tabsets = list(),   .tabsets = list(),   .env = NULL )"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"... shiny output calls, plotOutput('id', 'Title') .output_tabsets, .tabsets together define output layouts .env debug use","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-rave-updates-","dir":"Reference","previous_headings":"","what":"Method rave_updates()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"input initialization iEEG/ECoG data imported","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$rave_updates(..., .env = NULL)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"... R expressions .env debug use","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-rave-execute-","dir":"Reference","previous_headings":"","what":"Method rave_execute()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"parse, compile main function","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$rave_execute(..., auto = TRUE, .env = NULL, async_vars = NULL)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"... R expressions auto whether module run automatically .env debug use async_vars variables passed async module","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"none, ExecEnvir$execute generated.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-set-browser-","dir":"Reference","previous_headings":"","what":"Method set_browser()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"(experimental) cache R expression browser  localStorage","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$set_browser(expr, session = getDefaultReactiveDomain())"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"expr R expression session shiny session instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-generate-input-ui-","dir":"Reference","previous_headings":"","what":"Method generate_input_ui()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"generate input panels according parsed rave_inputs","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$generate_input_ui(sidebar_width = 3L)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"sidebar_width integer 1 11, width input panels","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"HTML tags","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-generate-output-ui-","dir":"Reference","previous_headings":"","what":"Method generate_output_ui()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"generate outputs labels according parsed  rave_outputs","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$generate_output_ui(sidebar_width = 3L)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"sidebar_width integer 1 11, width input panels, output panel width calculated 12-sidebar_width","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"HTML tags","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-is-global-","dir":"Reference","previous_headings":"","what":"Method is_global()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"(deprecated) check variable shared across modules. Please use cache_input instead get variable values.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$is_global(inputId)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"inputId input ID","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"ExecEnvir$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ExecEnvir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Session-based Module Runtime Environment Class — ExecEnvir","text":"","code":"if (FALSE) {  # Load module module <- get_module('ravebuiltins', 'power_explorer')  # Create execute environmen execenv <- module$get_or_new_exec_env() execenv$info()  }"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 'RAVE' Module Class — ModuleEnvir","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"contains module data, functions, etc.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"cache_env cache environment module module_id module ID, unique label_name corresponding module name script_path compiled module scripts script script_path exists, alternative script author wrote module often used version module version packages packages loaded module rmd_path deprecated parent_env parent environment module, usually global  environment package environment from_package whether module compiled another R  package. value required true since \"rave-0.1.9\". package_name package module belong ? sidebar_width input panel width, 1 11","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"ModuleEnvir$info() ModuleEnvir$print() ModuleEnvir$new() ModuleEnvir$get_or_new_exec_env() ModuleEnvir$load_script() ModuleEnvir$render_ui() ModuleEnvir$clean()","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"print module information","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"ModuleEnvir$info()"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"print module information returns memory address","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"ModuleEnvir$print(...)"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"ModuleEnvir$new(   module_id,   label_name,   script_path,   author = NULL,   version = \"0\",   packages = NULL,   .script_content = NULL,   rmd_path = NULL,   parent_env = globalenv() )"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"module_id, label_name, script_path, author, version see fields packages, parent_env, rmd_path see fields .script_content internal use","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"method-get-or-new-exec-env-","dir":"Reference","previous_headings":"","what":"Method get_or_new_exec_env()","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"get corresponding ExecEnvir  shiny session","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"ModuleEnvir$get_or_new_exec_env(   session = getDefaultReactiveDomain(),   ...,   new = FALSE )"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"session shiny session; see shiny domains ... ignored new whether force creating new runtime environment  previous one already exists","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"ExecEnvir instance associated  current module given session","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"method-load-script-","dir":"Reference","previous_headings":"","what":"Method load_script()","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"load compile script registered  ExecEnvir","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"ModuleEnvir$load_script(session = getDefaultReactiveDomain())"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"session shiny session; see shiny domains","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"method-render-ui-","dir":"Reference","previous_headings":"","what":"Method render_ui()","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"generate 'HTML' tags","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"ModuleEnvir$render_ui(session = getDefaultReactiveDomain())"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"session shiny session; see shiny domains","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"'HTML' tags","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"method-clean-","dir":"Reference","previous_headings":"","what":"Method clean()","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"clean module environment","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"ModuleEnvir$clean(session = getDefaultReactiveDomain(), session_id)"},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"session shiny session; see shiny domains session_id shiny 'RAVE' ID, default auto-generated","code":""},{"path":"https://beauchamplab.github.io/rave/reference/ModuleEnvir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 'RAVE' Module Class — ModuleEnvir","text":"","code":"if (FALSE) {  module <- get_module('ravebuiltins', 'power_explorer') module #> Module Name: Power Explorer  #> Version: 0  #> Script Path: ...  #> Author(s):  }"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for 'RAVE' Subject — Subject","title":"R6 Class for 'RAVE' Subject — Subject","text":"contains subject meta information preprocessing.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R6 Class for 'RAVE' Subject — Subject","text":"Zhengjia Wang","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class for 'RAVE' Subject — Subject","text":"meta environment stores subject meta data subject_id character, subject ID, generated project name  subject code. example, project name \"congruency\" subject code \"YAB\", subject_id=\"congruency/YAB\" subject_code identifier subject project_name project name dirs stores folder paths subject data is_strict whether preprocess directory checked  initializing instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"R6 Class for 'RAVE' Subject — Subject","text":"electrodes electrode table (read-) frequencies frequency table (read-) time_points time-point table (read-) time_excluded (deprecated) excluded time-point table (read-) sample_rate time-point table (read-, compatibility issues) volt_sample_rate voltage (trace) sampling rate Hertz  (read-) power_sample_rate power (amplitude) sampling rate Hertz (read-) phase_sample_rate phase sampling rate Hertz (read-) valid_electrodes valid electrodes current reference scheme  (read-) id read-version subject ID","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for 'RAVE' Subject — Subject","text":"Subject$info() Subject$print() Subject$finalize() Subject$new() Subject$preprocess_info() Subject$filter_all_electrodes() Subject$filter_valid_electrodes() Subject$has_bad_time_point() Subject$clone()","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"R6 Class for 'RAVE' Subject — Subject","text":"print information subject","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$info()"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for 'RAVE' Subject — Subject","text":"none","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 Class for 'RAVE' Subject — Subject","text":"override default print method","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$print(...)"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for 'RAVE' Subject — Subject","text":"... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for 'RAVE' Subject — Subject","text":"default memory address environment","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"R6 Class for 'RAVE' Subject — Subject","text":"called garbage collected","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$finalize()"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for 'RAVE' Subject — Subject","text":"constructor","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$new(project_name, subject_code, reference = NULL, strict = TRUE)"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for 'RAVE' Subject — Subject","text":"project_name project name subject_code subject code reference kind reference default subject,  default \"default\", referring \"reference_default.csv\"  subject meta folder strict whether check raw folder exists","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-preprocess-info-","dir":"Reference","previous_headings":"","what":"Method preprocess_info()","title":"R6 Class for 'RAVE' Subject — Subject","text":"Obtain preprocessing information. methods rarely directly called, wrap commonly used  fields functions","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$preprocess_info(key, default = NULL, customized = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for 'RAVE' Subject — Subject","text":"key fields items store SubjectInfo2 instance default default value key found customized indicates whether key refers additional items  fields SubjectInfo2. Default false, meaning  key fields.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for 'RAVE' Subject — Subject","text":"preprocess information correspond key","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-filter-all-electrodes-","dir":"Reference","previous_headings":"","what":"Method filter_all_electrodes()","title":"R6 Class for 'RAVE' Subject — Subject","text":"filter, returns existing electrodes","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$filter_all_electrodes(electrodes)"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for 'RAVE' Subject — Subject","text":"electrodes integer vector","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for 'RAVE' Subject — Subject","text":"electrodes subject , including bad, invalid electrodes.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-filter-valid-electrodes-","dir":"Reference","previous_headings":"","what":"Method filter_valid_electrodes()","title":"R6 Class for 'RAVE' Subject — Subject","text":"filter, returns valid electrodes","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$filter_valid_electrodes(electrodes)"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for 'RAVE' Subject — Subject","text":"electrodes integer vector","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for 'RAVE' Subject — Subject","text":"valid electrodes. Invalid electrodes refers bad  electrodes, end bipolar reference. \"Reference\"  column blank reference file, electrode invalid.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-has-bad-time-point-","dir":"Reference","previous_headings":"","what":"Method has_bad_time_point()","title":"R6 Class for 'RAVE' Subject — Subject","text":"(deprecated) check whether selected time excluded","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$has_bad_time_point(block, electrode, start, end)"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for 'RAVE' Subject — Subject","text":"block block name electrode electrode number start start time end end time","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class for 'RAVE' Subject — Subject","text":"objects class cloneable method.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"Subject$clone(deep = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for 'RAVE' Subject — Subject","text":"deep Whether make deep clone.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/Subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for 'RAVE' Subject — Subject","text":"","code":"if (FALSE) {  # Load subject, use `strict=FALSE` if not sure the existence of raw files  subject <- Subject$new(project_name = 'demo', 'YAB', strict = FALSE)  # Filter 1:14 to see which numbers refer to the valid electrodes subject$filter_valid_electrodes(1:14) #> [1] 13 14  }"},{"path":"https://beauchamplab.github.io/rave/reference/any_subject_loaded.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to check if data repository has data — any_subject_loaded","title":"Function to check if data repository has data — any_subject_loaded","text":"Function check data repository data","code":""},{"path":"https://beauchamplab.github.io/rave/reference/any_subject_loaded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to check if data repository has data — any_subject_loaded","text":"","code":"any_subject_loaded(rave_data = getDefaultDataRepository())"},{"path":"https://beauchamplab.github.io/rave/reference/any_subject_loaded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to check if data repository has data — any_subject_loaded","text":"rave_data internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/archive_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Archive Subject into Zipped file — archive_subject","title":"Archive Subject into Zipped file — archive_subject","text":"Save subject data, including brain imaging files zipped  file. Notice function guarantee every file . Please always double check inside.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/archive_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive Subject into Zipped file — archive_subject","text":"","code":"archive_subject(   project_name,   subject_code,   include_cache = FALSE,   include_fs = TRUE,   include_raw = FALSE,   save_to = tempdir() )"},{"path":"https://beauchamplab.github.io/rave/reference/archive_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive Subject into Zipped file — archive_subject","text":"project_name project name subject_code subject code include_cache whether include cache faster loading. Default  false include_fs whether include 'FreeSurfer' 'AFNI/SUMA' files include_raw whether include raw data save_to directory save file ","code":""},{"path":"https://beauchamplab.github.io/rave/reference/arrange_data_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize data repository — arrange_data_dir","title":"Initialize data repository — arrange_data_dir","text":"Initialize data repository","code":""},{"path":"https://beauchamplab.github.io/rave/reference/arrange_data_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize data repository — arrange_data_dir","text":"","code":"arrange_data_dir(first_time = FALSE, reset = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/arrange_data_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize data repository — arrange_data_dir","text":"first_time create data repositories reset reset default data directory","code":""},{"path":"https://beauchamplab.github.io/rave/reference/arrange_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Update (optional), and check validity of modules — arrange_modules","title":"Update (optional), and check validity of modules — arrange_modules","text":"Update (optional), check validity modules","code":""},{"path":"https://beauchamplab.github.io/rave/reference/arrange_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update (optional), and check validity of modules — arrange_modules","text":"","code":"arrange_modules(refresh = FALSE, reset = FALSE, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/arrange_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update (optional), and check validity of modules — arrange_modules","text":"refresh check updates file reset first_time, check module updates, ignored quiet overwrite messages","code":""},{"path":"https://beauchamplab.github.io/rave/reference/as_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Make new subject object from character — as_subject","title":"Make new subject object from character — as_subject","text":"Make new subject object character","code":""},{"path":"https://beauchamplab.github.io/rave/reference/as_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make new subject object from character — as_subject","text":"","code":"as_subject(subject, strict = TRUE, reference = \"default\")"},{"path":"https://beauchamplab.github.io/rave/reference/as_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make new subject object from character — as_subject","text":"subject characters format \"project/subject\" strict logical indication whether preprocess folder needed reference reference file subject using","code":""},{"path":"https://beauchamplab.github.io/rave/reference/attachDefaultDataRepository.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach subject data — attachDefaultDataRepository","title":"Attach subject data — attachDefaultDataRepository","text":"Attach subject data","code":""},{"path":"https://beauchamplab.github.io/rave/reference/attachDefaultDataRepository.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach subject data — attachDefaultDataRepository","text":"","code":"attachDefaultDataRepository(   unload = TRUE,   rave_data = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/attachDefaultDataRepository.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach subject data — attachDefaultDataRepository","text":"unload TRUE want detach rave_data internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Baseline signals — baseline","title":"Baseline signals — baseline","text":"Baseline signals","code":""},{"path":"https://beauchamplab.github.io/rave/reference/baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baseline signals — baseline","text":"","code":"baseline(   el,   from,   to,   method = \"mean\",   unit = \"%\",   data_only = FALSE,   hybrid = TRUE,   swap_file = tempfile(),   mem_optimize = TRUE,   same_dimension = unit %in% c(\"%\", \"dB\"),   preop = NULL,   op,   data_env = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baseline signals — baseline","text":"el Tensor ECoGTensor object baseline start time baseline end time method mean median, default mean unit \"%\" percent signal change \"dB\" decibel unit data_only return array tensor object? hybrid return tensor object, swap cache? useful large dataset swap_file default tempfile(), can specify path mem_optimize optimize large dataset? default TRUE same_dimension logical, true op element-wise operator preop function baseline op function baseline data_env internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/cache_raw_voltage.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Subject ","title":"Import Subject ","text":"Import Subject \"Matlab\" File Create \"HDF5\" files","code":""},{"path":"https://beauchamplab.github.io/rave/reference/cache_raw_voltage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Subject ","text":"","code":"cache_raw_voltage(project_name, subject_code, blocks, electrodes, ...)"},{"path":"https://beauchamplab.github.io/rave/reference/cache_raw_voltage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Subject ","text":"project_name project name subject_code subject code blocks blocks imported electrodes imported (please check file existence calling function) ... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_data_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if default data environment has object — check_data_repo","title":"Check if default data environment has object — check_data_repo","text":"Check default data environment object","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_data_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if default data environment has object — check_data_repo","text":"","code":"check_data_repo(   var = c(\"subject\"),   any = FALSE,   data_repo = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/check_data_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if default data environment has object — check_data_repo","text":"var variable name whether variables present variables  exist data_repo internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_data_repo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if default data environment has object — check_data_repo","text":"Logical TRUE FALSE indicating existence  variables","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Install RAVE Dependencies — check_dependencies","title":"Check and Install RAVE Dependencies — check_dependencies","text":"Check Install RAVE Dependencies","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Install RAVE Dependencies — check_dependencies","text":"","code":"check_dependencies(   update_rave = TRUE,   restart = TRUE,   nightly = FALSE,   demo_data = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/check_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Install RAVE Dependencies — check_dependencies","text":"update_rave logical, whether update RAVE restart logical, whether restart `RStudio` installation nightly logical, whether install develop version demo_data logical, whether check demo data ... compatibility purpose, ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_epoch.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if epoch file is valid — check_epoch","title":"Check if epoch file is valid — check_epoch","text":"Check epoch file valid","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_epoch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if epoch file is valid — check_epoch","text":"","code":"check_epoch(subject, epoch_name)"},{"path":"https://beauchamplab.github.io/rave/reference/check_epoch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if epoch file is valid — check_epoch","text":"subject subject object string epoch_name epoch name check","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete validity check a RAVE subject — check_subject","title":"Complete validity check a RAVE subject — check_subject","text":"Complete validity check RAVE subject","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete validity check a RAVE subject — check_subject","text":"","code":"check_subject(subject, stop_on_error = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/check_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete validity check a RAVE subject — check_subject","text":"subject character, must \"project/subject\" format stop_on_error logical, whether stop error occurs","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete validity check a RAVE subject — check_subject","text":"None","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_subjects2.html","id":null,"dir":"Reference","previous_headings":"","what":"check subject validity tools — check_subjects2","title":"check subject validity tools — check_subjects2","text":"check subject validity tools","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_subjects2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check subject validity tools — check_subjects2","text":"","code":"check_subjects2(project_name, subject_code, quiet = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/check_subjects2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check subject validity tools — check_subjects2","text":"project_name project_name subject_code subject_code quiet logical","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_subjects_old.html","id":null,"dir":"Reference","previous_headings":"","what":"check subject validity tools (use check_subjects2) — check_subjects_old","title":"check subject validity tools (use check_subjects2) — check_subjects_old","text":"check subject validity tools (use check_subjects2)","code":""},{"path":"https://beauchamplab.github.io/rave/reference/check_subjects_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check subject validity tools (use check_subjects2) — check_subjects_old","text":"","code":"check_subjects_old(   project_name,   subject_code,   check = TRUE,   folders = c(\"Subject Folder\", \"RAVE Folder\", \"Preprocessing Folder\", \"Meta Folder\",     \"Channel Folder\"),   preprocess = c(\"Started Preprocess\", \"Notch Filter\", \"Wavelet\"),   Meta = c(\"Electrode File\", \"Time point File\", \"Frequency File\", \"Epoch File\") )"},{"path":"https://beauchamplab.github.io/rave/reference/check_subjects_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check subject validity tools (use check_subjects2) — check_subjects_old","text":"project_name project_name subject_code subject_code check check internally used folders folders check preprocess preprocess check Meta Meta check","code":""},{"path":"https://beauchamplab.github.io/rave/reference/create_local_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Create local cache to speed up loading speed — create_local_cache","title":"Create local cache to speed up loading speed — create_local_cache","text":"Create local cache speed loading speed","code":""},{"path":"https://beauchamplab.github.io/rave/reference/create_local_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create local cache to speed up loading speed — create_local_cache","text":"","code":"create_local_cache(project_name, subject_code, epoch, time_range)"},{"path":"https://beauchamplab.github.io/rave/reference/create_local_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create local cache to speed up loading speed — create_local_cache","text":"project_name project name subject_code subject code epoch epoch name time_range time range cache","code":""},{"path":"https://beauchamplab.github.io/rave/reference/customizedUI.html","id":null,"dir":"Reference","previous_headings":"","what":"Customized Shiny Elements — customizedUI","title":"Customized Shiny Elements — customizedUI","text":"Customized Shiny Elements","code":""},{"path":"https://beauchamplab.github.io/rave/reference/customizedUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customized Shiny Elements — customizedUI","text":"","code":"customizedUI(inputId, width = 12L, ...)"},{"path":"https://beauchamplab.github.io/rave/reference/customizedUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customized Shiny Elements — customizedUI","text":"inputId character, input id width integer 1-12 ... passed uiOutput","code":""},{"path":"https://beauchamplab.github.io/rave/reference/decimate_fir.html","id":null,"dir":"Reference","previous_headings":"","what":"Decimate or Down-sample a Signal using FIR Filters — decimate_fir","title":"Decimate or Down-sample a Signal using FIR Filters — decimate_fir","text":"Decimate -sample Signal using FIR Filters","code":""},{"path":"https://beauchamplab.github.io/rave/reference/decimate_fir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decimate or Down-sample a Signal using FIR Filters — decimate_fir","text":"","code":"decimate_fir(x, q, n = 30)"},{"path":"https://beauchamplab.github.io/rave/reference/decimate_fir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decimate or Down-sample a Signal using FIR Filters — decimate_fir","text":"x signal decimated q integer factor decimated n filter order used -sample procedure, default 30","code":""},{"path":"https://beauchamplab.github.io/rave/reference/decimate_fir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decimate or Down-sample a Signal using FIR Filters — decimate_fir","text":"-sampled signal","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_initialization.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines 'RAVE' Module Initialization\nDefines the global variables for the module. Called along with \ndefine_input to define UI initialization\nactions once a subject is loaded. — define_initialization","title":"Defines 'RAVE' Module Initialization\nDefines the global variables for the module. Called along with \ndefine_input to define UI initialization\nactions once a subject is loaded. — define_initialization","text":"Defines 'RAVE' Module Initialization Defines global variables module. Called along  define_input define UI initialization actions subject loaded.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_initialization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' Module Initialization\nDefines the global variables for the module. Called along with \ndefine_input to define UI initialization\nactions once a subject is loaded. — define_initialization","text":"","code":"define_initialization(expr)  # S3 method for default define_initialization(expr)  # S3 method for rave_module_debug define_initialization(expr)  # S3 method for rave_running define_initialization(expr)  # S3 method for rave_running_local define_initialization(expr)"},{"path":"https://beauchamplab.github.io/rave/reference/define_initialization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' Module Initialization\nDefines the global variables for the module. Called along with \ndefine_input to define UI initialization\nactions once a subject is loaded. — define_initialization","text":"expr R expression run subject loaded","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_initialization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines 'RAVE' Module Initialization\nDefines the global variables for the module. Called along with \ndefine_input to define UI initialization\nactions once a subject is loaded. — define_initialization","text":"None","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_initialization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines 'RAVE' Module Initialization\nDefines the global variables for the module. Called along with \ndefine_input to define UI initialization\nactions once a subject is loaded. — define_initialization","text":"","code":"if (FALSE) { # Requires to install R package beauchamplab/ravebuiltins  # Enable debug mode ravebuiltins::dev_ravebuiltins(reload = FALSE) # Check data define_initialization({   rave_checks('power')   power <- module_tools$get_power(referenced = TRUE) })   # Initialize global variables for modules ravebuiltins::dev_ravebuiltins(reload = FALSE) define_initialization({   print(subject$info())   time_points = preload_info$time_points }) define_input(   shiny::sliderInput('time_range', 'Time-Range', min=0,                       max=1, value = c(0,1)),   init_args = c('min', 'max', 'value'),   init_expr = {     min = min(time_points)     max = max(time_points)     value = c(0, max)   } ) }"},{"path":"https://beauchamplab.github.io/rave/reference/define_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines 'RAVE' Module Inputs — define_input","title":"Defines 'RAVE' Module Inputs — define_input","text":"Defines 'RAVE' Module Inputs","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines 'RAVE' Module Inputs — define_input","text":"","code":"define_input(   definition,   init_args,   init_expr,   keyword = \"inputId\",   update_level = 2,   ... )  # S3 method for default define_input(   definition,   init_args,   init_expr,   keyword = \"inputId\",   update_level = 2,   ... )  # S3 method for rave_module_debug define_input(definition, init_args, init_expr, ...)  # S3 method for rave_running_local define_input(   definition,   init_args,   init_expr,   keyword = \"inputId\",   update_level = 2,   ... )  # S3 method for rave_running define_input(   definition,   init_args,   init_expr,   keyword = \"inputId\",   update_level = 2,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/define_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines 'RAVE' Module Inputs — define_input","text":"definition R expression define UI elements without ns(),  example, textInput('varname', 'Label', ...) init_args arguments change subject loaded init_expr expression evaluate subject loaded keyword identifies input element update_level update action code: see details. ... ignored passed methods.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines 'RAVE' Module Inputs — define_input","text":"See details","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defines 'RAVE' Module Inputs — define_input","text":"function behaves differently different contexts. default,  returns result definition. debugging modules ( \"rave_module_debug\"), assigns variable global environment  variable name defined input ID. contexts parse definition returns list 'RAVE' use internally compile module. update_level `0` input defined  manual inputs,  trigger re-calculate changed. `1` set,  input render's input, update render functions. `2`  used, user change input, whole module re-calculated. init_args must argument names definition. subject  loaded, init_expr evaluated local environment,  variables init_args used update input widgets.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Define 'RAVE' Module Output — define_output","title":"Define 'RAVE' Module Output — define_output","text":"Define 'RAVE' Module Output","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define 'RAVE' Module Output — define_output","text":"","code":"define_output(   definition,   title = \"\",   width = 12L,   order = Inf,   keyword = \"outputId\",   ... )  # S3 method for default define_output(   definition,   title = \"\",   width = 12L,   order = Inf,   keyword = \"outputId\",   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/define_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define 'RAVE' Module Output — define_output","text":"definition R expression output, plotOutput('') title Title show width integer 1 12, similar \"width\"  column order order output, smaller order displayed first keyword keyword output ID ... ignored passed methods","code":""},{"path":"https://beauchamplab.github.io/rave/reference/define_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define 'RAVE' Module Output — define_output","text":"default debug context, returns HTML tags,  'RAVE' running, result parse list internal use.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/detect_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Check all packages to for new RAVE module packages — detect_modules","title":"Check all packages to for new RAVE module packages — detect_modules","text":"Check packages new RAVE module packages","code":""},{"path":"https://beauchamplab.github.io/rave/reference/detect_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check all packages to for new RAVE module packages — detect_modules","text":"","code":"detect_modules(packages, as_module = TRUE, ...)"},{"path":"https://beauchamplab.github.io/rave/reference/detect_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check all packages to for new RAVE module packages — detect_modules","text":"packages array packages search , default packages as_module logical, try return module instances just list modules ... ignored compatibility purpose","code":""},{"path":"https://beauchamplab.github.io/rave/reference/diagnose_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot and Inspect Signals in Trace, Periodogram, and Histogram — diagnose_signal","title":"Plot and Inspect Signals in Trace, Periodogram, and Histogram — diagnose_signal","text":"Plot Inspect Signals Trace, Periodogram, Histogram","code":""},{"path":"https://beauchamplab.github.io/rave/reference/diagnose_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot and Inspect Signals in Trace, Periodogram, and Histogram — diagnose_signal","text":"","code":"diagnose_signal(   s1,   s2 = NULL,   sc = NULL,   srate,   name = \"\",   try_compress = TRUE,   max_freq = 300,   window = ceiling(srate * 2),   noverlap = window/2,   std = 3,   cex = 1.5,   lwd = 0.5,   flim = NULL,   nclass = 100,   main = \"Channel Inspection\",   col = c(\"black\", \"red\"),   which = NULL,   start_time = 0,   boundary = NULL,   mar = c(5.2, 5.1, 4.1, 2.1),   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/diagnose_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot and Inspect Signals in Trace, Periodogram, and Histogram — diagnose_signal","text":"s1 Signal inspection s2 Signal compare, default NULL sc compressed signal speedup trace plot, provided,  either original s1 used, compressed version used.  See parameter try_compress. srate Sample rate s1, note s2 s1 must  sample rate name Analysis name, e.g. \"CAR\", \"Notch\", etc. try_compress length s1 large, might take long  draw trace plot, solution -sample s1 first (like Matlab  ), plot compressed signal. information lost  process, however, trade-speed.  try_compress=FALSE indicates want compress signals  situation (might slow). max_freq Max frequency plot, larger half  sampling rate. window Window length draw Periodogram noverlap Number data points adjacent windows overlap std Error bar (red line) drawn standard deviations, default  3, meaning error bars represent 3 standard deviations. cex, lwd, mar, ... passed plot.default flim log10 frequency range plot nclass Number classes histogram main Plot title col Color two signals, length 2. sub-plot plot start_time signal starts boundary Boundary signal plot, default 1 standard deviation","code":""},{"path":"https://beauchamplab.github.io/rave/reference/diagnose_signal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot and Inspect Signals in Trace, Periodogram, and Histogram — diagnose_signal","text":"","code":"library(stats) time <- seq(0, 100, by = 1/200) s2 <- sin(2 * pi * 60 * time) + rnorm(length(time)) diagnose_signal(s2, srate = 200)  #> $ylim #> [1] 4.504951 #>  #> $boundary #> [1] 3.665342 #>   # Apply notch filter s1 = notch_filter(s2, 200, 58,62) diagnose_signal(s1, s2, srate = 200)  #> $ylim #> [1] 3.951245 #>  #> $boundary #> [1] 2.986448 #>"},{"path":"https://beauchamplab.github.io/rave/reference/download_sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to download demo data to data repository — download_sample_data","title":"Function to download demo data to data repository — download_sample_data","text":"Function download demo data data repository","code":""},{"path":"https://beauchamplab.github.io/rave/reference/download_sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to download demo data to data repository — download_sample_data","text":"","code":"download_sample_data(subject, version = \"v0.1.8-beta\", ...)"},{"path":"https://beauchamplab.github.io/rave/reference/download_sample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to download demo data to data repository — download_sample_data","text":"subject demo subject version rave release version ... parameters passed download_subject_data","code":""},{"path":"https://beauchamplab.github.io/rave/reference/download_sample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to download demo data to data repository — download_sample_data","text":"Nothing","code":""},{"path":"https://beauchamplab.github.io/rave/reference/download_subject_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to download subjects from internet/local — download_subject_data","title":"Function to download subjects from internet/local — download_subject_data","text":"Function download subjects internet/local","code":""},{"path":"https://beauchamplab.github.io/rave/reference/download_subject_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to download subjects from internet/local — download_subject_data","text":"","code":"download_subject_data(   con,   replace_if_exists = FALSE,   override_project = NULL,   override_subject = NULL,   temp_dir = tempdir(),   remove_zipfile = TRUE,   subject_settings = NULL,   mode = \"wb\",   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/download_subject_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to download subjects from internet/local — download_subject_data","text":"con url local file path replace_if_exists Automatically replace current subject subject  files exist (default FALSE) override_project null, project renamed value override_subject null, subject renamed value temp_dir temp directory store downloaded zip files extracted  files remove_zipfile clear downloaded zip files? con local  file, forced FALSE subject_settings override \"subject.yaml\" see details mode, ... passed download.file","code":""},{"path":"https://beauchamplab.github.io/rave/reference/download_subject_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to download subjects from internet/local — download_subject_data","text":"downloaded zip file \"subject.yaml\" file indicating  default project name, subject code, data directory raw data directory. want override subject settings, need implement subject_settings. See examples.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/download_subject_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to download subjects from internet/local — download_subject_data","text":"","code":"if (FALSE) { # Normal example download.file(   'https://s3-us-west-2.amazonaws.com/rave-demo-subject/sfn-demo/data-large.zip',   destfile = \"~/rave_data/data-small.zip\", mode = \"wb\") download_subject_data(con = \"~/rave_data/data-small.zip\")  # or the following # download_subject_data( # 'https://s3-us-west-2.amazonaws.com/rave-demo-subject/sfn-demo/data-large.zip' # )  # rename project to demo_junk download_subject_data(con = \"~/rave_data/data-small.zip\",            override_project = 'demo_junk')  # override settings download_subject_data(   con = \"~/rave_data/data-small.zip\",   subject_settings = list(     # subject conf     'demo_project/demo_subject' = list(       data_dir = 'data 2/data_dir/demo/sub1',       raw_dir = 'data 2/raw_dir/sub1'     )   ) ) }"},{"path":"https://beauchamplab.github.io/rave/reference/electrode_localization.html","id":null,"dir":"Reference","previous_headings":"","what":"Electrode localization — electrode_localization","title":"Electrode localization — electrode_localization","text":"Electrode localization","code":""},{"path":"https://beauchamplab.github.io/rave/reference/electrode_localization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Electrode localization — electrode_localization","text":"","code":"electrode_localization(subject_code, freesurfer_path, ct_path, ...)"},{"path":"https://beauchamplab.github.io/rave/reference/electrode_localization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Electrode localization — electrode_localization","text":"subject_code 'RAVE' subject code freesurfer_path 'FreeSurfer' folder path points reconstructed subject brain ct_path 'CT' path ('Nifti' format). 'CT' aligned  'T1-MRI'. Please check tutorial. ... parameters passing localization_module","code":""},{"path":"https://beauchamplab.github.io/rave/reference/electrode_localization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Electrode localization — electrode_localization","text":"function launch shiny application.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/eval_when_ready.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Function to run once Module is Ready — eval_when_ready","title":"Add Function to run once Module is Ready — eval_when_ready","text":"Usually contains reactive functions requires shiny reactive context","code":""},{"path":"https://beauchamplab.github.io/rave/reference/eval_when_ready.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Function to run once Module is Ready — eval_when_ready","text":"","code":"eval_when_ready(FUN)"},{"path":"https://beauchamplab.github.io/rave/reference/eval_when_ready.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Function to run once Module is Ready — eval_when_ready","text":"FUN function takes environment (runtime environment) arguments.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/export_diagnose_voltage.html","id":null,"dir":"Reference","previous_headings":"","what":"Export voltage (analog trace) diagnostic plots for each electrode — export_diagnose_voltage","title":"Export voltage (analog trace) diagnostic plots for each electrode — export_diagnose_voltage","text":"must import subject rave_preprocess()  run function","code":""},{"path":"https://beauchamplab.github.io/rave/reference/export_diagnose_voltage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export voltage (analog trace) diagnostic plots for each electrode — export_diagnose_voltage","text":"","code":"export_diagnose_voltage(   subject,   electrodes,   blocks,   save_dir = \"./export\",   width = 12,   height = 7,   useDingbats = FALSE,   onefile = TRUE,   winlen,   freq_lim,   nclass = 50,   fore_col = \"black\",   back_col = \"grey80\",   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/export_diagnose_voltage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export voltage (analog trace) diagnostic plots for each electrode — export_diagnose_voltage","text":"subject character following format:  \"project_name/subject_code\" electrodes integer vector. example: c(1,3,4,10:15) blocks blocks include. Default blocks subject save_dir directory want save files width, height, useDingbats passed pdf onefile collect images within one file? winlen window length, default twice subject sampling rate freq_lim default half voltage sampling rate nclass number classes histogram plot, default 50 fore_col Periodogram color Notch filtered signals back_col Periodogram color raw signals ... parameters passed pdf","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/fake_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake 'shiny' Session for Debug Purpose — fake_session","title":"Fake 'shiny' Session for Debug Purpose — fake_session","text":"Fake 'shiny' Session Debug Purpose","code":""},{"path":"https://beauchamplab.github.io/rave/reference/fake_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake 'shiny' Session for Debug Purpose — fake_session","text":"","code":"fake_session(rave_id = \"__fake_session__\", id = NULL)"},{"path":"https://beauchamplab.github.io/rave/reference/fake_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fake 'shiny' Session for Debug Purpose — fake_session","text":"rave_id internally used id module ID, used create scope, passed NS","code":""},{"path":"https://beauchamplab.github.io/rave/reference/fake_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fake 'shiny' Session for Debug Purpose — fake_session","text":"Fake shiny session debug purpose","code":""},{"path":"https://beauchamplab.github.io/rave/reference/finalize_installation.html","id":null,"dir":"Reference","previous_headings":"","what":"Finalize installation — finalize_installation","title":"Finalize installation — finalize_installation","text":"download demo data","code":""},{"path":"https://beauchamplab.github.io/rave/reference/finalize_installation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finalize installation — finalize_installation","text":"","code":"finalize_installation(   packages,   upgrade = c(\"ask\", \"config-only\", \"always\", \"never\", \"data-only\"),   async = FALSE )"},{"path":"https://beauchamplab.github.io/rave/reference/finalize_installation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finalize installation — finalize_installation","text":"packages package name finalize. 'rave' update base demo  data, c('threeBrain', 'ravebuiltins') upgrade built-data,  leave blank upgrade . upgrade whether ask. Default 'always' receive default  settings. choices 'ask', 'never',  'config-', 'data-' async whether run scripts parallel; default true.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/getDefaultDataRepository.html","id":null,"dir":"Reference","previous_headings":"","what":"Get environment where subject data is loaded — getDefaultDataRepository","title":"Get environment where subject data is loaded — getDefaultDataRepository","text":"Get environment subject data loaded","code":""},{"path":"https://beauchamplab.github.io/rave/reference/getDefaultDataRepository.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get environment where subject data is loaded — getDefaultDataRepository","text":"","code":"getDefaultDataRepository(   session = getDefaultReactiveDomain(),   session_id,   session_based = NULL )"},{"path":"https://beauchamplab.github.io/rave/reference/getDefaultDataRepository.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get environment where subject data is loaded — getDefaultDataRepository","text":"session shiny session, default NULL session_id internal use session_based internal use","code":""},{"path":"https://beauchamplab.github.io/rave/reference/getExecEnvirFromContext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Module Runtime Environment from Current Context — getExecEnvirFromContext","title":"Get Module Runtime Environment from Current Context — getExecEnvirFromContext","text":"Get Module Runtime Environment Current Context","code":""},{"path":"https://beauchamplab.github.io/rave/reference/getExecEnvirFromContext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Module Runtime Environment from Current Context — getExecEnvirFromContext","text":"","code":"getExecEnvirFromContext()"},{"path":"https://beauchamplab.github.io/rave/reference/getExecEnvirFromContext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Module Runtime Environment from Current Context — getExecEnvirFromContext","text":"ExecEnvir instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/getModuleEnvirFromContext.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Module Instance from Current Context — getModuleEnvirFromContext","title":"Get Module Instance from Current Context — getModuleEnvirFromContext","text":"Get Module Instance Current Context","code":""},{"path":"https://beauchamplab.github.io/rave/reference/getModuleEnvirFromContext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Module Instance from Current Context — getModuleEnvirFromContext","text":"","code":"getModuleEnvirFromContext()"},{"path":"https://beauchamplab.github.io/rave/reference/getModuleEnvirFromContext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Module Instance from Current Context — getModuleEnvirFromContext","text":"ModuleEnvir instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse 'RAVE' Module Contents — get_content","title":"Parse 'RAVE' Module Contents — get_content","text":"Parse 'RAVE' Module Contents","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse 'RAVE' Module Contents — get_content","text":"","code":"get_content(content, env, evaluate = TRUE, chunks = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/get_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse 'RAVE' Module Contents — get_content","text":"content characters, R code parse expressions env environment parse code , please specify context evaluate whether evaluate parse expression env chunks whether respect code notations chunk code  separate parts","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse 'RAVE' Module Contents — get_content","text":"See details.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_content.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse 'RAVE' Module Contents — get_content","text":"\"evaluate=TRUE\", parse code evaluated  within env returns logical value: TRUE means content something, otherwise returns FALSE \"evaluate=FALSE\", returns parsed expression add attributes names chunk whether asynchronous","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Directories in `RAVE` — get_dir","title":"Get Directories in `RAVE` — get_dir","text":"Get Directories `RAVE`","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Directories in `RAVE` — get_dir","text":"","code":"get_dir(   subject_code,   project_name,   block_num,   mkdirs = NULL,   subject_id,   relative = FALSE )"},{"path":"https://beauchamplab.github.io/rave/reference/get_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Directories in `RAVE` — get_dir","text":"subject_code subject code; can ignored subject_id provided project_name project name; can ignored subject_id provided block_num block name (optional) mkdirs internally used subject_id subject ID; can omitted subject_code  project_name provided relative whether return relative path absolute root directory","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_fake_updated_message.html","id":null,"dir":"Reference","previous_headings":"","what":"internally used for debugging functions — get_fake_updated_message","title":"internally used for debugging functions — get_fake_updated_message","text":"internally used debugging functions","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_fake_updated_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internally used for debugging functions — get_fake_updated_message","text":"","code":"get_fake_updated_message(..., .args = list(), .func = NULL)"},{"path":"https://beauchamplab.github.io/rave/reference/get_fake_updated_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internally used for debugging functions — get_fake_updated_message","text":"... see with_fake_session .args ... .func function pass with_fake_session","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_mem_usage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get RAM usage — get_mem_usage","title":"Get RAM usage — get_mem_usage","text":"Get RAM usage","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_mem_usage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get RAM usage — get_mem_usage","text":"","code":"get_mem_usage(   modules = list(),   data_envir = getDefaultDataRepository(),   session = getDefaultReactiveDomain() )"},{"path":"https://beauchamplab.github.io/rave/reference/get_mem_usage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get RAM usage — get_mem_usage","text":"modules module(s) data_envir default uses getDefaultDataRepository session shiny session instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to find modules in packages — get_module","title":"Function to find modules in packages — get_module","text":"Function find modules packages","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to find modules in packages — get_module","text":"","code":"get_module(package, module_id, local = FALSE, ...)"},{"path":"https://beauchamplab.github.io/rave/reference/get_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to find modules in packages — get_module","text":"package package name search modules module_id (optional) module ID package contains multiple modules local run module locally? ... ignored compatibility purpose","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe Way to Access Module Package Files Using Relative Path — get_path","title":"Safe Way to Access Module Package Files Using Relative Path — get_path","text":"Safe Way Access Module Package Files Using Relative Path","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe Way to Access Module Package Files Using Relative Path — get_path","text":"","code":"get_path(..., mustWork = FALSE, is_directory = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/get_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe Way to Access Module Package Files Using Relative Path — get_path","text":"... relative path file mustWork whether file must exists is_directory whether required file directory","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe Way to Access Module Package Files Using Relative Path — get_path","text":"developing package, get_path returns  absolute file path, otherwise uses system.file  get file package library.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_rave_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Get RAVE Theme from Package Settings — get_rave_theme","title":"Get RAVE Theme from Package Settings — get_rave_theme","text":"Get RAVE Theme Package Settings","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_rave_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get RAVE Theme from Package Settings — get_rave_theme","text":"packages packages check type characters, \"continuous\", \"discrete\", theme \"light\" \"dark\"; default current  theme saved rave_options('current_theme') session shiny session","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_rave_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get RAVE Theme from Package Settings — get_rave_theme","text":"list contains palettes found packages.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_rave_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get RAVE Theme from Package Settings — get_rave_theme","text":"","code":"pal = get_rave_theme('rave', type = c('continuous', 'discrete'), theme='light') print(pal, plot=TRUE) #> RAVE palettes in \"light\" mode for \"continuous\", \"discrete\" variables #> Total 2 palettes: #>   Default-Discrete (6 unique colors) #>   Default-Continuous (11 unique colors)   pal = get_rave_theme('rave', type = c('continuous', 'discrete'), theme='dark') print(pal, plot=TRUE) #> RAVE palettes in \"dark\" mode for \"continuous\", \"discrete\" variables #> Total 2 palettes: #>   Default-Discrete (6 unique colors) #>   Default-Continuous (11 unique colors)"},{"path":"https://beauchamplab.github.io/rave/reference/get_subjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all subjects within project — get_subjects","title":"Get all subjects within project — get_subjects","text":"Get subjects within project","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_subjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all subjects within project — get_subjects","text":"","code":"get_subjects(project_name, check_subfolders = TRUE, check_rawdata = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/get_subjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all subjects within project — get_subjects","text":"project_name project check_subfolders logical, check whether folder `rave` exists subject folder, default true check_rawdata logical, whether raw subject folder exists, default false","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Value or Default — get_val","title":"Get Value or Default — get_val","text":"Get Value Default","code":""},{"path":"https://beauchamplab.github.io/rave/reference/get_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Value or Default — get_val","text":"","code":"get_val(x, key = NULL, ..., .invalids = c(\"null\", \"na\"))"},{"path":"https://beauchamplab.github.io/rave/reference/get_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Value or Default — get_val","text":"x list, environment, just R object key name obtain x. Default NULL ... value invalid, default value return .invalids counts invalid? Default NULL  NA, represented \"null\" \"na\"","code":""},{"path":"https://beauchamplab.github.io/rave/reference/import_electrodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Import .csv files that contain electrode information — import_electrodes","title":"Import .csv files that contain electrode information — import_electrodes","text":"table import must contains column 'Electrode' consistent corresponding subject.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/import_electrodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import .csv files that contain electrode information — import_electrodes","text":"","code":"import_electrodes(path, subject, use_fs = NA, ...)"},{"path":"https://beauchamplab.github.io/rave/reference/import_electrodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import .csv files that contain electrode information — import_electrodes","text":"path path electrode file import subject 'RAVE' project-subject combination use_fs whether use 'FreeSurfer', default auto-detect ... passed read.csv","code":""},{"path":"https://beauchamplab.github.io/rave/reference/init_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize main application for debugging purpose — init_app","title":"Initialize main application for debugging purpose — init_app","text":"Initialize main application debugging purpose","code":""},{"path":"https://beauchamplab.github.io/rave/reference/init_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize main application for debugging purpose — init_app","text":"","code":"init_app(   modules = NULL,   active_module = NULL,   launch.browser = TRUE,   theme = \"red\",   disable_sidebar = FALSE,   simplify_header = FALSE,   ...,   data_repo = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/init_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize main application for debugging purpose — init_app","text":"modules modules show. See load_modules active_module module focus start (use module ID) launch.browser launch browsers, default theme color theme website disable_sidebar hide sidebar startup? simplify_header hide header startup? ... parameters like test.mode module debugging data_repo internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/init_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize 'RAVE' module for debug purpose — init_module","title":"Initialize 'RAVE' module for debug purpose — init_module","text":"Initialize 'RAVE' module debug purpose","code":""},{"path":"https://beauchamplab.github.io/rave/reference/init_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize 'RAVE' module for debug purpose — init_module","text":"","code":"init_module(   module_id,   debug = FALSE,   parse_context = c(\"rave_running\", \"rave_running_local\") )"},{"path":"https://beauchamplab.github.io/rave/reference/init_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize 'RAVE' module for debug purpose — init_module","text":"module_id module ID debug whether expose functions global environment parse_context parsing context, internal use","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/lapply_async.html","id":null,"dir":"Reference","previous_headings":"","what":"lapply using future package in asynchronous way — lapply_async","title":"lapply using future package in asynchronous way — lapply_async","text":"lapply using future package asynchronous way","code":""},{"path":"https://beauchamplab.github.io/rave/reference/lapply_async.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lapply using future package in asynchronous way — lapply_async","text":"","code":"lapply_async(   x,   fun,   ...,   .ncores = 0,   .call_back = NULL,   .packages = NULL,   .envir = environment(),   .globals = TRUE,   .gc = TRUE,   .as_datatable = FALSE,   .nrows = 0 )  lapply_async3(   x,   fun,   ...,   .globals = TRUE,   .gc = TRUE,   .callback = NULL,   .ncores = 0 )"},{"path":"https://beauchamplab.github.io/rave/reference/lapply_async.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lapply using future package in asynchronous way — lapply_async","text":"x, fun, ... (See lapply) .ncores Number cores use. value 0, number cores determined rave_options('max_worker'). .call_back function takes current iteration number argument, can NULL. .packages NULL default, function detect attached packages automatically. Otherwise specify packages want load. .envir internally used .globals Automatically detect variables. See ?future::future .gc Clean environment iterations? Recommended large datasets. .as_datatable logical, return result data.frame. Experimental. .nrows integer, .as_datatable=TRUE, number rows expected. .callback function NULL, callback function monitor updates.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/lapply_async.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lapply using future package in asynchronous way — lapply_async","text":"","code":"if (FALSE) { lapply_async(1:10, function(x){   Sys.sleep(2) # Run for 1 secs   Sys.getpid() }, .ncores = 3, .call_back = function(i){   cat('Running iteration -', i, '\\n') }) }"},{"path":"https://beauchamplab.github.io/rave/reference/load_local_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Load local cache for fast importing voltage, power, and phase — load_local_cache","title":"Load local cache for fast importing voltage, power, and phase — load_local_cache","text":"Load local cache fast importing voltage, power, phase","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_local_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load local cache for fast importing voltage, power, and phase — load_local_cache","text":"","code":"load_local_cache(   project_name,   subject_code,   epoch,   time_range,   frequency_range = NULL,   electrodes,   referenced = FALSE,   data_type = \"voltage\" )"},{"path":"https://beauchamplab.github.io/rave/reference/load_local_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load local cache for fast importing voltage, power, and phase — load_local_cache","text":"project_name project name subject_code subject code epoch epoch name time_range time range cache frequency_range frequency range cache electrodes electrodes cache referenced reference used data_type type(s) data cache","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Load subject meta data — load_meta","title":"Load subject meta data — load_meta","text":"Load subject meta data","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load subject meta data — load_meta","text":"","code":"load_meta(meta_type, project_name, subject_code, subject_id, meta_name)"},{"path":"https://beauchamplab.github.io/rave/reference/load_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load subject meta data — load_meta","text":"meta_type electrodes, epochs, time_points, frequencies, references ... project_name project name subject_code subject code subject_id \"project_name/subject_code\" meta_name used meta_type epochs references","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Load RAVE Modules — load_modules","title":"Load RAVE Modules — load_modules","text":"Load RAVE Modules","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load RAVE Modules — load_modules","text":"","code":"load_modules(legacy = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/load_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load RAVE Modules — load_modules","text":"legacy internal debug use","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_rave_module_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to load RAVE module package with UI tools — load_rave_module_package","title":"Function to load RAVE module package with UI tools — load_rave_module_package","text":"called internally init_module  module packages","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_rave_module_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to load RAVE module package with UI tools — load_rave_module_package","text":"","code":"load_rave_module_package(   env,   parse_context = c(\"rave_module_debug\", \"rave_running\", \"rave_running_local\") )"},{"path":"https://beauchamplab.github.io/rave/reference/load_rave_module_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to load RAVE module package with UI tools — load_rave_module_package","text":"env environment load tools parse_context parsing context","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_scripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load scripts that cannot put into package R folder — load_scripts","title":"Load scripts that cannot put into package R folder — load_scripts","text":"Use comp.R load scripts put  package \"R/\" folder. Usually scripts contains shiny reactive values changes dynamically.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_scripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load scripts that cannot put into package R folder — load_scripts","text":"","code":"load_scripts(..., asis = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/load_scripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load scripts that cannot put into package R folder — load_scripts","text":"... script files wrapped get_path,  R quasi-quotations wrapped quo. asis scripts loaded file, whether copy temporary directory launching 'RAVE'. Usually set true save loading time. However, scripts also source scripts  relative path, recommend setting asis=FALSE also load  additional scripts using function.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_scripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load scripts that cannot put into package R folder — load_scripts","text":"None, source, run whatever code provided.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/load_scripts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load scripts that cannot put into package R folder — load_scripts","text":"function raises error running default contexts,  requires debug mode, run inside 'RAVE' instance.","code":""},{"path":[]},{"path":"https://beauchamplab.github.io/rave/reference/module_analysis_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Find module analysis names — module_analysis_names","title":"Find module analysis names — module_analysis_names","text":"Find module analysis names","code":""},{"path":"https://beauchamplab.github.io/rave/reference/module_analysis_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find module analysis names — module_analysis_names","text":"","code":"module_analysis_names(   module_id,   project_name,   data_env = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/module_analysis_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find module analysis names — module_analysis_names","text":"module_id module id project_name project name data_env internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/mount_demo_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Demo Subject According to Package Configuration File — mount_demo_subject","title":"Load Demo Subject According to Package Configuration File — mount_demo_subject","text":"Load Demo Subject According Package Configuration File","code":""},{"path":"https://beauchamplab.github.io/rave/reference/mount_demo_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Demo Subject According to Package Configuration File — mount_demo_subject","text":"","code":"mount_demo_subject(   subject_code,   project_name,   force_reload_subject = FALSE,   ...,   download_url )  # S3 method for rave_module_debug mount_demo_subject(   subject_code,   project_name,   force_reload_subject = FALSE,   ...,   download_url )  # S3 method for rave_running mount_demo_subject(...)  # S3 method for rave_running_local mount_demo_subject(...)"},{"path":"https://beauchamplab.github.io/rave/reference/mount_demo_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Demo Subject According to Package Configuration File — mount_demo_subject","text":"subject_code optional, subject code project_name optional, project name force_reload_subject logical, whether force reload subject even  another subject loaded ... passed rave_prepare download_url optional, web link subject archive","code":""},{"path":"https://beauchamplab.github.io/rave/reference/mount_demo_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Demo Subject According to Package Configuration File — mount_demo_subject","text":"None","code":""},{"path":"https://beauchamplab.github.io/rave/reference/mount_demo_subject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Demo Subject According to Package Configuration File — mount_demo_subject","text":"debugging 'RAVE' modules, loads demo subject debugging according settings file \"inst/rave.yaml\". function function properly 'rave_module_debug' mode. means default raises errors. mode, example  'rave_running', nothing.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/notch_channel.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter line noise out from ECoG channels — notch_channel","title":"Filter line noise out from ECoG channels — notch_channel","text":"Filter line noise ECoG channels","code":""},{"path":"https://beauchamplab.github.io/rave/reference/notch_channel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter line noise out from ECoG channels — notch_channel","text":"","code":"notch_channel(s, sample_rate, bands = c(60, 120, 180), width = c(1, 2, 2))"},{"path":"https://beauchamplab.github.io/rave/reference/notch_channel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter line noise out from ECoG channels — notch_channel","text":"s signal, time domain sample_rate signal sample rate bands bands filtered width along bands, half filter width. example,bands 60Hz width 1Hz, notch filter lower bound 60-1=59Hz upper bound 60+1=61Hz.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/notch_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Notch Filter to Analog Trace Data — notch_filter","title":"Apply Notch Filter to Analog Trace Data — notch_filter","text":"Apply Notch Filter Analog Trace Data","code":""},{"path":"https://beauchamplab.github.io/rave/reference/notch_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Notch Filter to Analog Trace Data — notch_filter","text":"","code":"notch_filter(s, sample_rate, lb, ub, domain = 1)"},{"path":"https://beauchamplab.github.io/rave/reference/notch_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Notch Filter to Analog Trace Data — notch_filter","text":"s signal time frequency domain sample_rate signal sample rate lb filter lower bound (Hz) ub filter upper bound (Hz) domain 1 input signal time domain, 0 frequency domain","code":""},{"path":"https://beauchamplab.github.io/rave/reference/notch_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Notch Filter to Analog Trace Data — notch_filter","text":"filtered signal time domain","code":""},{"path":"https://beauchamplab.github.io/rave/reference/notch_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Notch Filter to Analog Trace Data — notch_filter","text":"function alternative R version notch filter","code":""},{"path":"https://beauchamplab.github.io/rave/reference/plot_signals.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot signals line by line — plot_signals","title":"Plot signals line by line — plot_signals","text":"Plot signals line line","code":""},{"path":"https://beauchamplab.github.io/rave/reference/plot_signals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot signals line by line — plot_signals","text":"","code":"plot_signals(   signals,   sample_rate = 1,   col = 1,   space = 0.995,   space_mode = \"quantile\",   start_time = 0,   duration = NULL,   compress = TRUE,   channel_names = NULL,   ylab = \"Channel\",   time_shift = 0,   lwd = 0.5,   cex = 2,   new_plot = TRUE,   plot = \"base\",   xlim = NULL,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/plot_signals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot signals line by line — plot_signals","text":"signals signals plot, row one signal sample_rate sample rate col Color, either length 1 number signals. Can numeric color name space space signals. space_mode='quantile', space determined quantile signal (0 - 1). space_mode='absoute', space . start_time Time seconds time point signal drawn duration length 1. Time seconds duration time drawn. Default NULL (Total time range) compress FALSE means compression signals, TRUE auto-detection, 2, 3, 4,... means compress signals x plot. (usually compress signal save time) channel_names Names signals. Y tick labels ylab Y axis label plot, xlim, space_mode, time_shift, lwd, cex, new_plot Deprecated ... pass matplot","code":""},{"path":"https://beauchamplab.github.io/rave/reference/progress.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper for shiny Progress object — progress","title":"A wrapper for shiny Progress object — progress","text":"wrapper shiny Progress object","code":""},{"path":"https://beauchamplab.github.io/rave/reference/progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper for shiny Progress object — progress","text":"","code":"progress(   title,   max = 1,   session = getDefaultReactiveDomain(),   quiet = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper for shiny Progress object — progress","text":"title Main title progress bar max many steps process session shiny session, default getDefaultReactiveDomain quiet nonreactive-mode? default FALSE. TRUE, progress bar hidden shiny app ... parameters passing progress2","code":""},{"path":"https://beauchamplab.github.io/rave/reference/progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A wrapper for shiny Progress object — progress","text":"shiny::Progress class used non-reactive environment. rave::progress function wrap can use non-reactive settings.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/pwelch.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ","title":"Plot ","text":"Plot \"Welch\" Periodogram","code":""},{"path":"https://beauchamplab.github.io/rave/reference/pwelch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ","text":"","code":"pwelch(   x,   fs,   window = 64,   noverlap = 8,   nfft = 256,   col = \"black\",   xlim = NULL,   ylim = NULL,   main = \"Welch periodogram\",   plot = TRUE,   log = \"xy\",   spec_func = stats::spectrum,   cex = 1,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/pwelch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ","text":"x signal fs sample rate window window length, default 128 noverlap overlap two adjacent windows, default 8 nfft number basis functions col, xlim, ylim, main, cex, ... passed plot plot logical, plot result log indicates axis log10 value. options  '', 'x', 'y', 'xy'. spec_func deprecated","code":""},{"path":"https://beauchamplab.github.io/rave/reference/r_to_py.Subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert subject to python object — r_to_py.Subject","title":"Convert subject to python object — r_to_py.Subject","text":"Convert subject python object","code":""},{"path":"https://beauchamplab.github.io/rave/reference/r_to_py.Subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert subject to python object — r_to_py.Subject","text":"","code":"r_to_py.Subject(obj, convert = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/r_to_py.Subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert subject to python object — r_to_py.Subject","text":"obj Subject class convert pass r_to_py reticulate package","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave-cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache R Objects with Different levels — rave-cache","title":"Cache R Objects with Different levels — rave-cache","text":"Cache R Objects Different levels","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave-cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache R Objects with Different levels — rave-cache","text":"","code":"cache(   key,   val,   name,   replace = FALSE,   global = FALSE,   persist = FALSE,   test = FALSE,   temporary = FALSE,   ... )  # S3 method for rave_running cache(   key,   val,   name,   replace = FALSE,   global = FALSE,   persist = FALSE,   test = FALSE,   temporary = FALSE,   ... )  # S3 method for rave_running_local cache(..., global = TRUE)  # S3 method for default cache(..., global = TRUE)  cache_input(   inputId,   val = NULL,   read_only = TRUE,   ...,   session = getDefaultReactiveDomain() )  clear_cache(levels = 1)"},{"path":"https://beauchamplab.github.io/rave/reference/rave-cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache R Objects with Different levels — rave-cache","text":"key R object, named list best. val value cache, key exists, value evaluated saved name, inputId character name dataset input replace true, force replace cached object current one global whether cache variable global environment. true, variable accessible instances modules. persist logical, whether persist hard-disk, used  global=FALSE, persisted data used modules test, read_only whether save value cache found temporary whether use temporary map cache, used internally. ... ignored session shiny session instance levels levels clear cache","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave-cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache R Objects with Different levels — rave-cache","text":"Cached value, val. cache val  missing, return NULL.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave-cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cache R Objects with Different levels — rave-cache","text":"","code":"# global can be set to false within RAVE modules print(cache('a', 1, name = 'data', global = TRUE)) # returns 1 #> [1] 1 print(cache('a', 2, name = 'data', global = TRUE)) # still returns 1 #> [1] 1  # clear cache (for global=TRUE) clear_cache(levels = 1:3) print(cache('a', 2, name = 'data', global = TRUE)) # Now returns 2 #> [1] 2  # Not run `Sys.sleep` because a is cached print(cache('a', 2, name = 'data', global = TRUE)) #> [1] 2 print(cache('a', {Sys.sleep(10); 1}, name = 'data', global = TRUE)) #> [1] 2  # get data without key cache(name = 'data', global = TRUE) #> [1] 2  # clear cache that is global-only clear_cache(levels = 2)  # Test (test=TRUE) if cache exists, if not, return value but no save cache(name = 'abracadabra', val = 'no cache', global = TRUE, test = TRUE) #> [1] \"no cache\" cache(name = 'abracadabra', global = TRUE) #> NULL  # cache module inputs if (FALSE) { # Need to run in package module environment cache_input('abracadabra', 'no-magic', read_only = TRUE)   }"},{"path":"https://beauchamplab.github.io/rave/reference/rave-tabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Open/Close a tab in RAVE main application — rave-tabs","title":"Open/Close a tab in RAVE main application — rave-tabs","text":"Open/Close tab RAVE main application","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave-tabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open/Close a tab in RAVE main application — rave-tabs","text":"","code":"close_tab(module_id, tabname)  open_tab(module_id, tabname)"},{"path":"https://beauchamplab.github.io/rave/reference/rave-tabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open/Close a tab in RAVE main application — rave-tabs","text":"module_id character, module ID tabname character, tab box title","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_brain2.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools to load and view brain in 3D viewer — rave_brain2","title":"Tools to load and view brain in 3D viewer — rave_brain2","text":"Tools load view brain 3D viewer","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_brain2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools to load and view brain in 3D viewer — rave_brain2","text":"","code":"rave_brain2(   subject,   surfaces = \"pial\",   use_141 = TRUE,   recache = FALSE,   clean_before_cache = FALSE,   compute_template = FALSE,   usetemplateifmissing = FALSE )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_brain2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tools to load and view brain in 3D viewer — rave_brain2","text":"subject character `RAVE` subject instance surfaces one \"pial\", \"white\",  \"smoothwm\", brain surface types use_141 logical, whether use standard 141 brain recache whether force cache data, default false clean_before_cache whether clean cache redo cache, default  false compute_template logical whether compute nearest 141 node. Please  also check freesurfer_brain. usetemplateifmissing whether logical, display template brain  subject brain found, default false","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data is loaded for current module — rave_checks","title":"Check if data is loaded for current module — rave_checks","text":"Check data loaded current module","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data is loaded for current module — rave_checks","text":"","code":"rave_checks(   ...,   data = NULL,   .raise_error = TRUE,   rave_data = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data is loaded for current module — rave_checks","text":"... see details data ..., can vector .raise_error whether raise error data missing rave_data internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_checks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if data is loaded for current module — rave_checks","text":"function checks whether \"ECoG\" data loaded. format :  \"DATA+(blankspace)+TYPE\". \"DATA\" can \"power\" (wavelet  transform amplitude), \"phase\" (complex angle), \"volt\"/\"voltage\" ( wavelet). \"TYPE\" can \"raw\" (reference), \"referenced\"  (referenced common average reference, white matter reference,  bipolar reference). voltage data, one special type  \"full\" loads voltage data electrodes.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_context.html","id":null,"dir":"Reference","previous_headings":"","what":"'RAVE' Context: Read and Set Context of Environments — rave_context","title":"'RAVE' Context: Read and Set Context of Environments — rave_context","text":"'RAVE' Context: Read Set Context Environments","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'RAVE' Context: Read and Set Context of Environments — rave_context","text":"","code":"rave_context(   context,   require_contexts,   disallowed_context,   error_msg,   spos = 2L,   senv,   tpos = 1L,   tenv )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'RAVE' Context: Read and Set Context of Environments — rave_context","text":"context context string target environment, optional, see `Details' require_contexts characters, (optional): required context current  function. context missing, function raise errors disallowed_context characters, (optional): defines contexts  work function. running within contexts, function  raise errors error_msg characters, (optional): running improper contexts, message display, passed stop spos levels go search senv, passed  parent.frame senv environment read 'RAVE' contexts tpos levels go search tenv, passed  parent.frame tenv environment set 'RAVE' contexts","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'RAVE' Context: Read and Set Context of Environments — rave_context","text":"list current context, including package name, module ID,  current ExecEnvir instance running \"rave_running\" context.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_context.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'RAVE' Context: Read and Set Context of Environments — rave_context","text":"Context strings tells function context running,  affect behaviors functions within environment.  'RAVE' modules usually R packages, context strings help  module writers determine function running. example,  running locally, 'RAVE' container, debug mode. typical example  get_path function. external scripts used  R packages require obtained using system.file.  However, files subject change, using system file function  requires re-compile package, time-consuming. Function  get_path returns file path relative current  working directory development (\"default\" context),  calls system.file 'RAVE' instance running. four contexts: \"default\", \"rave_module_debug\",  \"rave_running\", \"rave_running_local\". default Default context: means function running  without additional information. rave_module_debug Debug mode: used develop debug  modules locally. context, function aware  package module belongs rave_running function running context,  means running inside shiny application (usually within  start_rave). function able get  contexts module ID, current runtime environment  (ExecEnvir) rave_running_local Similar \"rave_running\",  without run-time environment. context, module  running locally without shiny. reactive observers disabled,  modules compiled function inputs defined  define_input arguments, code within  \"main.R\" main body function. Function rave_context uses reserved variables environment: .__rave_context__., .__rave_package__.,  .__rave_module__., .__rave_module_instance__.. Please  use variables purposes. See `Examples'  set read context.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'RAVE' Context: Read and Set Context of Environments — rave_context","text":"","code":"# ------- 1. Read/Set Context ---------  library(dipsaus) library(rave) # Reset context for current environment rave_context('default')  # Read from current caller's environment fun <- function(...){   ctx <- rave_context()   cat2('The function is running under context - ', ctx$context)   cat2('The package under the context - ', ctx$package)   cat2('Module ID is - ', ctx$module_id)   cat2('Running instance is - ', ctx$instance) } fun() #> The function is running under context -  default  #> The package under the context -    #> Module ID is -    #> Running instance is -   ## The function is running under context - default ## The package under the context -  ## ...  # Set debug context  debug_env <- new.env() rave_context('rave_module_debug', tenv = debug_env) debug_env$.__rave_package__. <- 'ravebuiltins'  # With debug_env, the function is aware of the package it's under with(debug_env, { fun() }) #> The function is running under context -  rave_module_debug  #> The package under the context -  ravebuiltins  #> Module ID is -    #> Running instance is -   ## The function is running under context - rave_module_debug ## The package under the context - ravebuiltins ## ...  # To set context within the function and affect the functions inide fun2 <- function(module_id){   # Run rave_context and then set module ID   rave_context('rave_running_local')   .__rave_module__. <- module_id   fun() } with(debug_env, { fun2('power_explorer') }) #> The function is running under context -  rave_running_local  #> The package under the context -  ravebuiltins  #> Module ID is -  power_explorer  #> Running instance is -   ## The function is running under context - rave_running_local ## The package under the context - ravebuiltins ## Module ID is - power_explorer ## ...  # Let's see what we can do with rave_module_debug with(debug_env, { get_path('inst/rave.yaml') }) # When I develop the package, it returns: ## \"/Users/beauchamplab/.../ravebuiltins/inst/settings.yaml\" # When I run in other places, it returns ## \"/Users/beauchamplab/Library/R/3.6/library/ravebuiltins/rave.yaml\"   # ------- 2. Setting behaviors for context --------- # One way to set different behaviors is to using `ctx` if (FALSE) { fun <- function(){   ctx <- rave_context()   switch(ctx$context, ...) } }  # The other way is to use S3 generics provided by R syntax fun <- rave_context_generics('fun', function(module_id, ...){})  # action for default fun.default <- function(...){   cat2('Function is not supposed to run under default context...',        level = 'ERROR') }  # for debug, set module ID and run with rave_running_local fun.rave_module_debug <- function(module_id, ...){   cat2('Debug mode... loading a test subject')   # Do something ... like automatically mount_demo_subject   # by running mount_demo_subject()      rave_context('rave_running_local')   .__rave_module__. <- module_id   # Recall the function under rave_running_local context   fun(module_id, ...) }  # When running within RAVE container, local and with shiny fun.rave_running_local <- function(...){   ctx <- rave_context()   cat2('Yay, running ', ctx$module_id, ' under context ',        ctx$context, level='INFO') } fun.rave_running <- fun.rave_running_local  # Run in default mode, expect error message fun('power_explorer') #> Function is not supposed to run under default context...   # Run in debug mode debug_env <- new.env() rave_context('rave_module_debug', tenv = debug_env) debug_env$.__rave_package__. <- 'ravebuiltins'  # The function will run in debug mode, then rave_running_local with(debug_env, { fun('power_explorer') }) #> Debug mode... loading a test subject  #> Yay, running  power_explorer  under context  rave_running_local"},{"path":"https://beauchamplab.github.io/rave/reference/rave_context_generics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create S3 Generics that Respects 'RAVE' Context — rave_context_generics","title":"Create S3 Generics that Respects 'RAVE' Context — rave_context_generics","text":"Create S3 Generics Respects 'RAVE' Context","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_context_generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create S3 Generics that Respects 'RAVE' Context — rave_context_generics","text":"","code":"rave_context_generics(   fun_name,   fun = function() {  } )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_context_generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create S3 Generics that Respects 'RAVE' Context — rave_context_generics","text":"fun_name generic function name fun function set arguments generic","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_context_generics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create S3 Generics that Respects 'RAVE' Context — rave_context_generics","text":"generic function","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_failure.html","id":null,"dir":"Reference","previous_headings":"","what":"RAVE Failure Message — rave_failure","title":"RAVE Failure Message — rave_failure","text":"RAVE Failure Message","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_failure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAVE Failure Message — rave_failure","text":"","code":"rave_failure(message, level = \"ERROR\", call = NULL, .stop = TRUE)"},{"path":"https://beauchamplab.github.io/rave/reference/rave_failure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RAVE Failure Message — rave_failure","text":"message error message, character level level error message; can chosen \"INFO\", \"WARNING\", \"ERROR\" call call expression .stop stop just return condition","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_failure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RAVE Failure Message — rave_failure","text":"Error condition stop","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_ignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for development use — rave_ignore","title":"Functions for development use — rave_ignore","text":"Functions development use","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_ignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for development use — rave_ignore","text":"","code":"rave_ignore(...)"},{"path":"https://beauchamplab.github.io/rave/reference/rave_ignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for development use — rave_ignore","text":"... Expressions","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_import_rawdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Raw Signal from Non-standard Formats — rave_import_rawdata","title":"Import Raw Signal from Non-standard Formats — rave_import_rawdata","text":"Import Raw Signal Non-standard Formats","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_import_rawdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Raw Signal from Non-standard Formats — rave_import_rawdata","text":"","code":"rave_import_rawdata(subject_code, project_name, launch_preprocess = TRUE)"},{"path":"https://beauchamplab.github.io/rave/reference/rave_import_rawdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Raw Signal from Non-standard Formats — rave_import_rawdata","text":"subject_code subject code search raw folder project_name project name create launch_preprocess whether launch preprocess app, default true","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_module_tools.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for module writers — rave_module_tools","title":"Tools for module writers — rave_module_tools","text":"Tools module writers","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_module_tools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools for module writers — rave_module_tools","text":"","code":"rave_module_tools(   env = NULL,   data_env = getDefaultDataRepository(),   quiet = FALSE )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_module_tools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tools for module writers — rave_module_tools","text":"env environment save tools data_env rave data repository returned rave_prepare, internally used quiet logical","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to change rave-options — rave_options","title":"Function to change rave-options — rave_options","text":"Function change rave-options","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to change rave-options — rave_options","text":"","code":"rave_options(   ...,   .save = TRUE,   launch_gui = TRUE,   host = \"127.0.0.1\",   port = NULL )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to change rave-options — rave_options","text":"... Key-Value option pairs .save save disk? ignored time launch_gui launch shiny app? host IP address host port Port number","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Subject and Create iEEG/ECoG Data Environment — rave_prepare","title":"Load Subject and Create iEEG/ECoG Data Environment — rave_prepare","text":"Loads subject data along iEEG/ECoG data memory.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Subject and Create iEEG/ECoG Data Environment — rave_prepare","text":"","code":"rave_prepare(   subject,   electrodes,   epoch,   time_range,   frequency_range,   data_types = c(\"power\"),   reference = \"default\",   attach = \"r\",   data_env = getDefaultDataRepository(),   strict = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Subject and Create iEEG/ECoG Data Environment — rave_prepare","text":"subject characters, format: \"PROJECT/SUBJECT\" electrodes integer vector, electrodes loaded epoch characters, name epoch data. example, \"epoch1\"  refers epoch file \"epoch_epoch1.csv\" subject meta folder time_range vector length 2. time_range[1]=1 indicates 1  second onset loaded; time_range[2]=1.5 means 1.5  seconds onset loaded. Make sure positive number  seconds frequency_range vector length 2 - lowest highest frequencies.  default frequencies. applied power phase data. data_types vector characters, data pre-loaded.  \"power\" refers referenced power (power spectrum) data,  \"phase\" refers referenced phase data, \"volt\"  referenced voltage (original analog traces) data reference name reference data. example, \"default\" refers reference file \"reference_default.csv\" subject meta folder attach, characters NULL, NULL want  attach , \"r\" want load data R environment, \"py\"  python, \"matlab\" Matlab. (python Matlab  construction) data_env environment load data . strict whether check raw data exists. Default (suggested) ... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"RAVE Preprocess Function — rave_preprocess","title":"RAVE Preprocess Function — rave_preprocess","text":"RAVE Preprocess Function","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAVE Preprocess Function — rave_preprocess","text":"","code":"rave_preprocess(   sidebar_width = 3,   launch.browser = TRUE,   host = \"127.0.0.1\",   port = NULL,   quiet = TRUE,   beta = FALSE,   test.mode = FALSE,   modules,   ver = \"3\",   theme = \"purple\",   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/rave_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RAVE Preprocess Function — rave_preprocess","text":"sidebar_width sidebar width 1 11. launch.browser whether launch browser, default host default \"localhost\" port integer port app quiet soft deprecated beta whether load experimental modules, default false test.mode passed shinyApp modules preprocess modules load, reserved ver internally used please change theme color theme ... used functions configuration debug ","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_preprocess_tools.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create RAVE preprocess tools — rave_preprocess_tools","title":"Function to create RAVE preprocess tools — rave_preprocess_tools","text":"Function create RAVE preprocess tools","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_preprocess_tools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create RAVE preprocess tools — rave_preprocess_tools","text":"","code":"rave_preprocess_tools(env = new.env(), ...)"},{"path":"https://beauchamplab.github.io/rave/reference/rave_preprocess_tools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create RAVE preprocess tools — rave_preprocess_tools","text":"env environment save tools ... ignored","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get RAVE version — rave_version","title":"Get RAVE version — rave_version","text":"Get RAVE version","code":""},{"path":"https://beauchamplab.github.io/rave/reference/rave_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get RAVE version — rave_version","text":"","code":"rave_version()"},{"path":"https://beauchamplab.github.io/rave/reference/read_mgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Make iElvis mgrid file — read_mgrid","title":"Make iElvis mgrid file — read_mgrid","text":"Make iElvis mgrid file","code":""},{"path":"https://beauchamplab.github.io/rave/reference/read_mgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make iElvis mgrid file — read_mgrid","text":"","code":"read_mgrid(con, raw = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/read_mgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make iElvis mgrid file — read_mgrid","text":"con mgrid file raw raw file processed guess","code":""},{"path":"https://beauchamplab.github.io/rave/reference/read_mgrid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make iElvis mgrid file — read_mgrid","text":"John Magnotti","code":""},{"path":"https://beauchamplab.github.io/rave/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dipsaus clear_env ravedash shiny_icons raveio ECoGTensor, LazyFST, LazyH5, Tensor, catgl, get_projects, load_fst_or_h5, load_h5, read_mat, save_h5","code":""},{"path":"https://beauchamplab.github.io/rave/reference/reload_module_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload 'RAVE' module package without restarting 'RStudio' — reload_module_package","title":"Reload 'RAVE' module package without restarting 'RStudio' — reload_module_package","text":"debugging module packages. contexts raise error.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/reload_module_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload 'RAVE' module package without restarting 'RStudio' — reload_module_package","text":"","code":"reload_module_package(expose = FALSE, clear_env = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/reload_module_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload 'RAVE' module package without restarting 'RStudio' — reload_module_package","text":"expose whether expose development tools global environment; default clear_env whether clear global environment reloading; default ","code":""},{"path":"https://beauchamplab.github.io/rave/reference/safe_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Save data to ","title":"Save data to ","text":"Save data \"CSV\", file exists, rename old file","code":""},{"path":"https://beauchamplab.github.io/rave/reference/safe_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save data to ","text":"","code":"safe_write_csv(data, file, ..., quiet = FALSE)"},{"path":"https://beauchamplab.github.io/rave/reference/safe_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save data to ","text":"data data frame file \"CSV\" file save ... pass write.csv quiet suppress overwrite message","code":""},{"path":"https://beauchamplab.github.io/rave/reference/save_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to save meta data to subject — save_meta","title":"Function to save meta data to subject — save_meta","text":"Function save meta data subject","code":""},{"path":"https://beauchamplab.github.io/rave/reference/save_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to save meta data to subject — save_meta","text":"","code":"save_meta(data, meta_type, project_name, subject_code)"},{"path":"https://beauchamplab.github.io/rave/reference/save_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to save meta data to subject — save_meta","text":"data data table meta_type see load meta project_name project name subject_code subject code","code":""},{"path":"https://beauchamplab.github.io/rave/reference/save_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to locally save options (deprecated) — save_options","title":"Function to locally save options (deprecated) — save_options","text":"Function locally save options (deprecated)","code":""},{"path":"https://beauchamplab.github.io/rave/reference/save_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to locally save options (deprecated) — save_options","text":"","code":"save_options()"},{"path":"https://beauchamplab.github.io/rave/reference/session-reactives.html","id":null,"dir":"Reference","previous_headings":"","what":"Get `shiny' ","title":"Get `shiny' ","text":"Get `shiny' \"input\" \"output\" objects current context","code":""},{"path":"https://beauchamplab.github.io/rave/reference/session-reactives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get `shiny' ","text":"","code":"getDefaultReactiveInput(session)  # S3 method for default getDefaultReactiveInput(session)  # S3 method for rave_module_debug getDefaultReactiveInput(session)  # S3 method for rave_running getDefaultReactiveInput(session = shiny::getDefaultReactiveDomain())  # S3 method for rave_running_local getDefaultReactiveInput(session)  getDefaultReactiveOutput(session = shiny::getDefaultReactiveDomain())  # S3 method for default getDefaultReactiveOutput(session = shiny::getDefaultReactiveDomain())  # S3 method for rave_module_debug getDefaultReactiveOutput(session = shiny::getDefaultReactiveDomain())  # S3 method for rave_running getDefaultReactiveOutput(session = shiny::getDefaultReactiveDomain())  # S3 method for rave_running_local getDefaultReactiveOutput(session = shiny::getDefaultReactiveDomain())"},{"path":"https://beauchamplab.github.io/rave/reference/session-reactives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get `shiny' ","text":"session shiny session instance","code":""},{"path":"https://beauchamplab.github.io/rave/reference/session-reactives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get `shiny' ","text":"shiny context, returns special reactiveValues refers inputs outputs shiny applications. non-shiny  contexts, returns fake environment related current fake session,  debug purpose.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/set_rave_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and Return RAVE theme — set_rave_theme","title":"Set and Return RAVE theme — set_rave_theme","text":"Set Return RAVE theme","code":""},{"path":"https://beauchamplab.github.io/rave/reference/set_rave_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and Return RAVE theme — set_rave_theme","text":"","code":"set_rave_theme(   theme,   .set_default = FALSE,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://beauchamplab.github.io/rave/reference/set_rave_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and Return RAVE theme — set_rave_theme","text":"theme \"light\" \"dark\". See details missing .set_default whether save current theme default, default . session shiny session","code":""},{"path":"https://beauchamplab.github.io/rave/reference/set_rave_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and Return RAVE theme — set_rave_theme","text":"theme current context.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/set_rave_theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set and Return RAVE theme — set_rave_theme","text":"RAVE support two themes: \"light\" mode \"dark\" mode. \"light\" mode, web application background light gray white. \"dark\" mode, application background gray foreground white. theme missing RAVE running web application,  set current session, otherwise, default theme retrieved  rave_options('default_theme'). option \"default_theme\" missing, defaults \"light\".","code":""},{"path":"https://beauchamplab.github.io/rave/reference/set_rave_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and Return RAVE theme — set_rave_theme","text":"","code":"# Retrieve current theme get_val(rave_options('default_theme'), default = 'light') #> [1] \"light\"  # Set light mode set_rave_theme('light') #> [1] \"light\" plot(1:10, main = 'test light mode')   # Set dark mode set_rave_theme('dark') #> [1] \"dark\" plot(1:10, main = 'test dark mode')"},{"path":"https://beauchamplab.github.io/rave/reference/shinirize.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert module to objects used in shiny — shinirize","title":"Convert module to objects used in shiny — shinirize","text":"Convert module objects used shiny","code":""},{"path":"https://beauchamplab.github.io/rave/reference/shinirize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert module to objects used in shiny — shinirize","text":"","code":"shinirize(   module,   session = getDefaultReactiveDomain(),   test.mode = TRUE,   data_env = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/shinirize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert module to objects used in shiny — shinirize","text":"module ModuleEnvir object session shiny session, default current shiny session test.mode passed start_rave init_app data_env internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/start_rave.html","id":null,"dir":"Reference","previous_headings":"","what":"Start RAVE main application — start_rave","title":"Start RAVE main application — start_rave","text":"Start RAVE main application","code":""},{"path":"https://beauchamplab.github.io/rave/reference/start_rave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start RAVE main application — start_rave","text":"","code":"start_rave(   modules = NULL,   active_module = NULL,   launch.browser = TRUE,   theme = \"purple\",   disable_sidebar = FALSE,   simplify_header = FALSE,   token = NULL,   data_repo = getDefaultDataRepository(),   ... )  launch_demo(   modules = \"power_explorer\",   launch.browser = TRUE,   theme = \"green\",   disable_sidebar = TRUE,   simplify_header = FALSE,   ... )  start_rave2(   host = \"127.0.0.1\",   port = NULL,   launch.browser = TRUE,   jupyter = FALSE,   as_job = FALSE,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/start_rave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start RAVE main application — start_rave","text":"modules character vector, modules modules load starting application. active_module character, module show default. launch.browser logical, whether launch browser. theme character, color theme, default 'purple'. disable_sidebar logical, whether hide sidebar. simplify_header logical, whether show simplified header. token character vector, default NULL. specified, ?token=... needed url access application. data_repo internally used. ... parameters. See details. host, port, jupyter, as_job 'RAVE' 2.0 related arguments; see  start_session","code":""},{"path":"https://beauchamplab.github.io/rave/reference/subject_tmpfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create temp file in subject module folder — subject_tmpfile","title":"Create temp file in subject module folder — subject_tmpfile","text":"Create temp file subject module folder","code":""},{"path":"https://beauchamplab.github.io/rave/reference/subject_tmpfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create temp file in subject module folder — subject_tmpfile","text":"","code":"subject_tmpfile(   module_id,   fun_name = \"\",   project_name,   subject_code,   pattern = \"file_\",   data_env = getDefaultDataRepository() )"},{"path":"https://beauchamplab.github.io/rave/reference/subject_tmpfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create temp file in subject module folder — subject_tmpfile","text":"module_id module id fun_name function name (usually export_\"function_name\" module) project_name project name subject_code subject code pattern passed tempfile data_env internally used","code":""},{"path":"https://beauchamplab.github.io/rave/reference/suma_spec_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse SUMA spec file — suma_spec_parse","title":"Parse SUMA spec file — suma_spec_parse","text":"Parse SUMA spec file","code":""},{"path":"https://beauchamplab.github.io/rave/reference/suma_spec_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse SUMA spec file — suma_spec_parse","text":"","code":"suma_spec_parse(subject, spec_file)"},{"path":"https://beauchamplab.github.io/rave/reference/suma_spec_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse SUMA spec file — suma_spec_parse","text":"subject either characters format like 'Project/Subject'  Subject object created Subject$new(...) spec_file default decided rave_options('suma_spec_file'),  depending subjects","code":""},{"path":"https://beauchamplab.github.io/rave/reference/suma_spec_parse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse SUMA spec file — suma_spec_parse","text":"","code":"if (FALSE) { subject = 'Demo/YAB' # or create subject object subject = Subject$new('Demo', 'YAB')  # Please download sample subjects first to run suma_spec_parse(subject) }"},{"path":"https://beauchamplab.github.io/rave/reference/suma_surface_volume_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse AFNI BRIK/HEAD file — suma_surface_volume_parse","title":"Parse AFNI BRIK/HEAD file — suma_surface_volume_parse","text":"Parse AFNI BRIK/HEAD file","code":""},{"path":"https://beauchamplab.github.io/rave/reference/suma_surface_volume_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse AFNI BRIK/HEAD file — suma_surface_volume_parse","text":"","code":"suma_surface_volume_parse(file_path)"},{"path":"https://beauchamplab.github.io/rave/reference/suma_surface_volume_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse AFNI BRIK/HEAD file — suma_surface_volume_parse","text":"file_path path BRIK HEAD file","code":""},{"path":"https://beauchamplab.github.io/rave/reference/to_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse 'RAVE' Module and Returns Parsed Content in Environments — to_module","title":"Parse 'RAVE' Module and Returns Parsed Content in Environments — to_module","text":"Parse 'RAVE' Module Returns Parsed Content Environments","code":""},{"path":"https://beauchamplab.github.io/rave/reference/to_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse 'RAVE' Module and Returns Parsed Content in Environments — to_module","text":"","code":"to_module(   module_id,   sidebar_width = 3,   parse_context = c(\"rave_running_local\", \"rave_running\") )"},{"path":"https://beauchamplab.github.io/rave/reference/to_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse 'RAVE' Module and Returns Parsed Content in Environments — to_module","text":"module_id module ID sidebar_width input sidebar width parse_context parse context, default \"rave_running_local\"","code":""},{"path":"https://beauchamplab.github.io/rave/reference/view_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Debug-use only, reload package, mount demo subject, and launch shiny app — view_layout","title":"Debug-use only, reload package, mount demo subject, and launch shiny app — view_layout","text":"Debug-use , reload package, mount demo subject, launch shiny app","code":""},{"path":"https://beauchamplab.github.io/rave/reference/view_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug-use only, reload package, mount demo subject, and launch shiny app — view_layout","text":"","code":"view_layout(   module_id,   sidebar_width = 3,   launch.browser = TRUE,   reload = TRUE,   ... )"},{"path":"https://beauchamplab.github.io/rave/reference/view_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Debug-use only, reload package, mount demo subject, and launch shiny app — view_layout","text":"module_id module ID debug sidebar_width input width, 1 11, default 3 launch.browser whether launch browser, default true, options rstudioapi::viewer false. reload whether reload package first. default true, ... passed init_app","code":""},{"path":"https://beauchamplab.github.io/rave/reference/wavelet.html","id":null,"dir":"Reference","previous_headings":"","what":"Wavelet Transformation With Phase — wavelet","title":"Wavelet Transformation With Phase — wavelet","text":"code translated Matlab script written  Brett Foster, Stanford Memory Lab, 2015 permission use `RAVE`.","code":""},{"path":"https://beauchamplab.github.io/rave/reference/wavelet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wavelet Transformation With Phase — wavelet","text":"","code":"wavelet(data, freqs, srate, wave_num, demean = TRUE)"},{"path":"https://beauchamplab.github.io/rave/reference/wavelet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wavelet Transformation With Phase — wavelet","text":"data - vector time series decomposed freqs - vector center frequencies decomposition srate - sample rate (Hz) wave_num - desired number cycles wavelet (typically 3-20  frequencies 2-200). demean - whether remove mean data first?","code":""},{"path":"https://beauchamplab.github.io/rave/reference/wavelet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wavelet Transformation With Phase — wavelet","text":"Decompose time series data time-frequency representation (spectral decomposition) using wavelet transform. Employs \"Morlet\" wavelet method (gaussian taper sine wave) obtain analytic signal specified frequencies (via convolution).","code":""},{"path":"https://beauchamplab.github.io/rave/reference/wavelet_kernels.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns wavelets to be used for wavelet function — wavelet_kernels","title":"Returns wavelets to be used for wavelet function — wavelet_kernels","text":"Returns wavelets used wavelet function","code":""},{"path":"https://beauchamplab.github.io/rave/reference/wavelet_kernels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns wavelets to be used for wavelet function — wavelet_kernels","text":"","code":"wavelet_kernels(freqs, srate, wave_num)"},{"path":"https://beauchamplab.github.io/rave/reference/wavelet_kernels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns wavelets to be used for wavelet function — wavelet_kernels","text":"freqs vector center frequencies decomposition srate sample rate (Hz) wave_num desired number cycles wavelet (typically 3-20 frequencies 2-200).","code":""}]
